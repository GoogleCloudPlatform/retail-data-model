// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.10
// source: api/enums/locale.proto

package enums

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Locale int32

const (
	Locale_UNKNOWN    Locale = 0
	Locale_SQ         Locale = 1
	Locale_AM         Locale = 2
	Locale_AR_DZ      Locale = 3
	Locale_AR_BH      Locale = 4
	Locale_AR_EG      Locale = 5
	Locale_AR_IQ      Locale = 6
	Locale_AR_JO      Locale = 7
	Locale_AR_KW      Locale = 8
	Locale_AR_LB      Locale = 9
	Locale_AR_LY      Locale = 10
	Locale_AR_MA      Locale = 11
	Locale_AR_OM      Locale = 12
	Locale_AR_QA      Locale = 13
	Locale_AR_SA      Locale = 14
	Locale_AR_SY      Locale = 15
	Locale_AR_TN      Locale = 16
	Locale_AR_AE      Locale = 17
	Locale_AR_YE      Locale = 18
	Locale_HY         Locale = 19
	Locale_AS         Locale = 20
	Locale_AZ_AZ      Locale = 22
	Locale_EU         Locale = 23
	Locale_BE         Locale = 24
	Locale_BN         Locale = 26
	Locale_BS         Locale = 27
	Locale_BG         Locale = 28
	Locale_MY         Locale = 29
	Locale_CA         Locale = 30
	Locale_ZH_CN      Locale = 31
	Locale_ZH_HK      Locale = 32
	Locale_ZH_MO      Locale = 33
	Locale_ZH_SG      Locale = 34
	Locale_ZH_TW      Locale = 35
	Locale_HR         Locale = 36
	Locale_CS         Locale = 37
	Locale_DA         Locale = 38
	Locale_MALDIVIAN  Locale = 39
	Locale_NL_BE      Locale = 40
	Locale_NL_NL      Locale = 41
	Locale_EN_AU      Locale = 43
	Locale_EN_BZ      Locale = 44
	Locale_EN_CA      Locale = 45
	Locale_EN_CB      Locale = 46
	Locale_EN_GB      Locale = 47
	Locale_EN_IN      Locale = 48
	Locale_EN_IE      Locale = 49
	Locale_EN_JM      Locale = 50
	Locale_EN_NZ      Locale = 51
	Locale_EN_PH      Locale = 52
	Locale_EN_ZA      Locale = 53
	Locale_EN_TT      Locale = 54
	Locale_EN_US      Locale = 55
	Locale_ET         Locale = 57
	Locale_MK         Locale = 58
	Locale_FO         Locale = 59
	Locale_FA         Locale = 60
	Locale_FI         Locale = 62
	Locale_FR_BE      Locale = 63
	Locale_FR_CA      Locale = 65
	Locale_FR_FR      Locale = 68
	Locale_FR_LU      Locale = 69
	Locale_FR_CH      Locale = 74
	Locale_GD_IE      Locale = 77
	Locale_GD         Locale = 78
	Locale_DE_AT      Locale = 81
	Locale_DE_DE      Locale = 82
	Locale_DE_LI      Locale = 83
	Locale_DE_LU      Locale = 84
	Locale_DE_CH      Locale = 85
	Locale_EL         Locale = 86
	Locale_GN         Locale = 87
	Locale_GU         Locale = 88
	Locale_HE         Locale = 90
	Locale_HI         Locale = 91
	Locale_HU         Locale = 92
	Locale_IS         Locale = 93
	Locale_ID         Locale = 95
	Locale_IT_IT      Locale = 96
	Locale_IT_CH      Locale = 97
	Locale_JA         Locale = 98
	Locale_KN         Locale = 99
	Locale_KS         Locale = 100
	Locale_KK         Locale = 101
	Locale_KM         Locale = 102
	Locale_KO         Locale = 104
	Locale_LO         Locale = 106
	Locale_LA         Locale = 107
	Locale_LV         Locale = 108
	Locale_LT         Locale = 109
	Locale_MS_BN      Locale = 110
	Locale_MS_MY      Locale = 111
	Locale_ML         Locale = 112
	Locale_MT         Locale = 113
	Locale_MI         Locale = 115
	Locale_MR         Locale = 116
	Locale_MN         Locale = 118
	Locale_NE         Locale = 119
	Locale_NO_NO      Locale = 121
	Locale_OR         Locale = 122
	Locale_PL         Locale = 123
	Locale_PT_BR      Locale = 124
	Locale_PT_PT      Locale = 125
	Locale_PA         Locale = 126
	Locale_RM         Locale = 127
	Locale_RO_MO      Locale = 128
	Locale_RO         Locale = 129
	Locale_RU         Locale = 130
	Locale_RU_MO      Locale = 131
	Locale_SA         Locale = 133
	Locale_SR_SP      Locale = 135
	Locale_TN         Locale = 137
	Locale_SD         Locale = 138
	Locale_SI         Locale = 139
	Locale_SK         Locale = 140
	Locale_SL         Locale = 141
	Locale_SO         Locale = 142
	Locale_SB         Locale = 143
	Locale_ES_AR      Locale = 144
	Locale_ES_BO      Locale = 145
	Locale_ES_CL      Locale = 146
	Locale_ES_CO      Locale = 147
	Locale_ES_CR      Locale = 148
	Locale_ES_DO      Locale = 149
	Locale_ES_EC      Locale = 150
	Locale_ES_SV      Locale = 151
	Locale_ES_GT      Locale = 152
	Locale_ES_HN      Locale = 153
	Locale_ES_MX      Locale = 154
	Locale_ES_NI      Locale = 155
	Locale_ES_PA      Locale = 156
	Locale_ES_PY      Locale = 157
	Locale_ES_PE      Locale = 158
	Locale_ES_PR      Locale = 159
	Locale_ES_ES      Locale = 160
	Locale_ES_UY      Locale = 161
	Locale_ES_VE      Locale = 162
	Locale_SW         Locale = 163
	Locale_SV_FI      Locale = 164
	Locale_SV_SE      Locale = 165
	Locale_TG         Locale = 166
	Locale_TA         Locale = 167
	Locale_TT         Locale = 168
	Locale_TE         Locale = 169
	Locale_TH         Locale = 170
	Locale_BO         Locale = 171
	Locale_TS         Locale = 172
	Locale_TR         Locale = 173
	Locale_TK         Locale = 174
	Locale_UK         Locale = 175
	Locale_UTF_8      Locale = 176
	Locale_UR         Locale = 177
	Locale_UZ_UZ      Locale = 179
	Locale_VI         Locale = 180
	Locale_CY         Locale = 181
	Locale_XH         Locale = 182
	Locale_YI         Locale = 183
	Locale_ZU         Locale = 184
	Locale_LOCALE_ANY Locale = 500
)

// Enum value maps for Locale.
var (
	Locale_name = map[int32]string{
		0:   "UNKNOWN",
		1:   "SQ",
		2:   "AM",
		3:   "AR_DZ",
		4:   "AR_BH",
		5:   "AR_EG",
		6:   "AR_IQ",
		7:   "AR_JO",
		8:   "AR_KW",
		9:   "AR_LB",
		10:  "AR_LY",
		11:  "AR_MA",
		12:  "AR_OM",
		13:  "AR_QA",
		14:  "AR_SA",
		15:  "AR_SY",
		16:  "AR_TN",
		17:  "AR_AE",
		18:  "AR_YE",
		19:  "HY",
		20:  "AS",
		22:  "AZ_AZ",
		23:  "EU",
		24:  "BE",
		26:  "BN",
		27:  "BS",
		28:  "BG",
		29:  "MY",
		30:  "CA",
		31:  "ZH_CN",
		32:  "ZH_HK",
		33:  "ZH_MO",
		34:  "ZH_SG",
		35:  "ZH_TW",
		36:  "HR",
		37:  "CS",
		38:  "DA",
		39:  "MALDIVIAN",
		40:  "NL_BE",
		41:  "NL_NL",
		43:  "EN_AU",
		44:  "EN_BZ",
		45:  "EN_CA",
		46:  "EN_CB",
		47:  "EN_GB",
		48:  "EN_IN",
		49:  "EN_IE",
		50:  "EN_JM",
		51:  "EN_NZ",
		52:  "EN_PH",
		53:  "EN_ZA",
		54:  "EN_TT",
		55:  "EN_US",
		57:  "ET",
		58:  "MK",
		59:  "FO",
		60:  "FA",
		62:  "FI",
		63:  "FR_BE",
		65:  "FR_CA",
		68:  "FR_FR",
		69:  "FR_LU",
		74:  "FR_CH",
		77:  "GD_IE",
		78:  "GD",
		81:  "DE_AT",
		82:  "DE_DE",
		83:  "DE_LI",
		84:  "DE_LU",
		85:  "DE_CH",
		86:  "EL",
		87:  "GN",
		88:  "GU",
		90:  "HE",
		91:  "HI",
		92:  "HU",
		93:  "IS",
		95:  "ID",
		96:  "IT_IT",
		97:  "IT_CH",
		98:  "JA",
		99:  "KN",
		100: "KS",
		101: "KK",
		102: "KM",
		104: "KO",
		106: "LO",
		107: "LA",
		108: "LV",
		109: "LT",
		110: "MS_BN",
		111: "MS_MY",
		112: "ML",
		113: "MT",
		115: "MI",
		116: "MR",
		118: "MN",
		119: "NE",
		121: "NO_NO",
		122: "OR",
		123: "PL",
		124: "PT_BR",
		125: "PT_PT",
		126: "PA",
		127: "RM",
		128: "RO_MO",
		129: "RO",
		130: "RU",
		131: "RU_MO",
		133: "SA",
		135: "SR_SP",
		137: "TN",
		138: "SD",
		139: "SI",
		140: "SK",
		141: "SL",
		142: "SO",
		143: "SB",
		144: "ES_AR",
		145: "ES_BO",
		146: "ES_CL",
		147: "ES_CO",
		148: "ES_CR",
		149: "ES_DO",
		150: "ES_EC",
		151: "ES_SV",
		152: "ES_GT",
		153: "ES_HN",
		154: "ES_MX",
		155: "ES_NI",
		156: "ES_PA",
		157: "ES_PY",
		158: "ES_PE",
		159: "ES_PR",
		160: "ES_ES",
		161: "ES_UY",
		162: "ES_VE",
		163: "SW",
		164: "SV_FI",
		165: "SV_SE",
		166: "TG",
		167: "TA",
		168: "TT",
		169: "TE",
		170: "TH",
		171: "BO",
		172: "TS",
		173: "TR",
		174: "TK",
		175: "UK",
		176: "UTF_8",
		177: "UR",
		179: "UZ_UZ",
		180: "VI",
		181: "CY",
		182: "XH",
		183: "YI",
		184: "ZU",
		500: "LOCALE_ANY",
	}
	Locale_value = map[string]int32{
		"UNKNOWN":    0,
		"SQ":         1,
		"AM":         2,
		"AR_DZ":      3,
		"AR_BH":      4,
		"AR_EG":      5,
		"AR_IQ":      6,
		"AR_JO":      7,
		"AR_KW":      8,
		"AR_LB":      9,
		"AR_LY":      10,
		"AR_MA":      11,
		"AR_OM":      12,
		"AR_QA":      13,
		"AR_SA":      14,
		"AR_SY":      15,
		"AR_TN":      16,
		"AR_AE":      17,
		"AR_YE":      18,
		"HY":         19,
		"AS":         20,
		"AZ_AZ":      22,
		"EU":         23,
		"BE":         24,
		"BN":         26,
		"BS":         27,
		"BG":         28,
		"MY":         29,
		"CA":         30,
		"ZH_CN":      31,
		"ZH_HK":      32,
		"ZH_MO":      33,
		"ZH_SG":      34,
		"ZH_TW":      35,
		"HR":         36,
		"CS":         37,
		"DA":         38,
		"MALDIVIAN":  39,
		"NL_BE":      40,
		"NL_NL":      41,
		"EN_AU":      43,
		"EN_BZ":      44,
		"EN_CA":      45,
		"EN_CB":      46,
		"EN_GB":      47,
		"EN_IN":      48,
		"EN_IE":      49,
		"EN_JM":      50,
		"EN_NZ":      51,
		"EN_PH":      52,
		"EN_ZA":      53,
		"EN_TT":      54,
		"EN_US":      55,
		"ET":         57,
		"MK":         58,
		"FO":         59,
		"FA":         60,
		"FI":         62,
		"FR_BE":      63,
		"FR_CA":      65,
		"FR_FR":      68,
		"FR_LU":      69,
		"FR_CH":      74,
		"GD_IE":      77,
		"GD":         78,
		"DE_AT":      81,
		"DE_DE":      82,
		"DE_LI":      83,
		"DE_LU":      84,
		"DE_CH":      85,
		"EL":         86,
		"GN":         87,
		"GU":         88,
		"HE":         90,
		"HI":         91,
		"HU":         92,
		"IS":         93,
		"ID":         95,
		"IT_IT":      96,
		"IT_CH":      97,
		"JA":         98,
		"KN":         99,
		"KS":         100,
		"KK":         101,
		"KM":         102,
		"KO":         104,
		"LO":         106,
		"LA":         107,
		"LV":         108,
		"LT":         109,
		"MS_BN":      110,
		"MS_MY":      111,
		"ML":         112,
		"MT":         113,
		"MI":         115,
		"MR":         116,
		"MN":         118,
		"NE":         119,
		"NO_NO":      121,
		"OR":         122,
		"PL":         123,
		"PT_BR":      124,
		"PT_PT":      125,
		"PA":         126,
		"RM":         127,
		"RO_MO":      128,
		"RO":         129,
		"RU":         130,
		"RU_MO":      131,
		"SA":         133,
		"SR_SP":      135,
		"TN":         137,
		"SD":         138,
		"SI":         139,
		"SK":         140,
		"SL":         141,
		"SO":         142,
		"SB":         143,
		"ES_AR":      144,
		"ES_BO":      145,
		"ES_CL":      146,
		"ES_CO":      147,
		"ES_CR":      148,
		"ES_DO":      149,
		"ES_EC":      150,
		"ES_SV":      151,
		"ES_GT":      152,
		"ES_HN":      153,
		"ES_MX":      154,
		"ES_NI":      155,
		"ES_PA":      156,
		"ES_PY":      157,
		"ES_PE":      158,
		"ES_PR":      159,
		"ES_ES":      160,
		"ES_UY":      161,
		"ES_VE":      162,
		"SW":         163,
		"SV_FI":      164,
		"SV_SE":      165,
		"TG":         166,
		"TA":         167,
		"TT":         168,
		"TE":         169,
		"TH":         170,
		"BO":         171,
		"TS":         172,
		"TR":         173,
		"TK":         174,
		"UK":         175,
		"UTF_8":      176,
		"UR":         177,
		"UZ_UZ":      179,
		"VI":         180,
		"CY":         181,
		"XH":         182,
		"YI":         183,
		"ZU":         184,
		"LOCALE_ANY": 500,
	}
)

func (x Locale) Enum() *Locale {
	p := new(Locale)
	*p = x
	return p
}

func (x Locale) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Locale) Descriptor() protoreflect.EnumDescriptor {
	return file_api_enums_locale_proto_enumTypes[0].Descriptor()
}

func (Locale) Type() protoreflect.EnumType {
	return &file_api_enums_locale_proto_enumTypes[0]
}

func (x Locale) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Locale.Descriptor instead.
func (Locale) EnumDescriptor() ([]byte, []int) {
	return file_api_enums_locale_proto_rawDescGZIP(), []int{0}
}

var File_api_enums_locale_proto protoreflect.FileDescriptor

var file_api_enums_locale_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x2a, 0xbd, 0x0c, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x53, 0x51, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x4d, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x52, 0x5f, 0x44, 0x5a, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x5f, 0x42, 0x48,
	0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x5f, 0x45, 0x47, 0x10, 0x05, 0x12, 0x09, 0x0a,
	0x05, 0x41, 0x52, 0x5f, 0x49, 0x51, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x5f, 0x4a,
	0x4f, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x5f, 0x4b, 0x57, 0x10, 0x08, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x52, 0x5f, 0x4c, 0x42, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x5f,
	0x4c, 0x59, 0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x5f, 0x4d, 0x41, 0x10, 0x0b, 0x12,
	0x09, 0x0a, 0x05, 0x41, 0x52, 0x5f, 0x4f, 0x4d, 0x10, 0x0c, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52,
	0x5f, 0x51, 0x41, 0x10, 0x0d, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x5f, 0x53, 0x41, 0x10, 0x0e,
	0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x5f, 0x53, 0x59, 0x10, 0x0f, 0x12, 0x09, 0x0a, 0x05, 0x41,
	0x52, 0x5f, 0x54, 0x4e, 0x10, 0x10, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x5f, 0x41, 0x45, 0x10,
	0x11, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x5f, 0x59, 0x45, 0x10, 0x12, 0x12, 0x06, 0x0a, 0x02,
	0x48, 0x59, 0x10, 0x13, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x53, 0x10, 0x14, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x5a, 0x5f, 0x41, 0x5a, 0x10, 0x16, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x55, 0x10, 0x17, 0x12,
	0x06, 0x0a, 0x02, 0x42, 0x45, 0x10, 0x18, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x4e, 0x10, 0x1a, 0x12,
	0x06, 0x0a, 0x02, 0x42, 0x53, 0x10, 0x1b, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x47, 0x10, 0x1c, 0x12,
	0x06, 0x0a, 0x02, 0x4d, 0x59, 0x10, 0x1d, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x41, 0x10, 0x1e, 0x12,
	0x09, 0x0a, 0x05, 0x5a, 0x48, 0x5f, 0x43, 0x4e, 0x10, 0x1f, 0x12, 0x09, 0x0a, 0x05, 0x5a, 0x48,
	0x5f, 0x48, 0x4b, 0x10, 0x20, 0x12, 0x09, 0x0a, 0x05, 0x5a, 0x48, 0x5f, 0x4d, 0x4f, 0x10, 0x21,
	0x12, 0x09, 0x0a, 0x05, 0x5a, 0x48, 0x5f, 0x53, 0x47, 0x10, 0x22, 0x12, 0x09, 0x0a, 0x05, 0x5a,
	0x48, 0x5f, 0x54, 0x57, 0x10, 0x23, 0x12, 0x06, 0x0a, 0x02, 0x48, 0x52, 0x10, 0x24, 0x12, 0x06,
	0x0a, 0x02, 0x43, 0x53, 0x10, 0x25, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x41, 0x10, 0x26, 0x12, 0x0d,
	0x0a, 0x09, 0x4d, 0x41, 0x4c, 0x44, 0x49, 0x56, 0x49, 0x41, 0x4e, 0x10, 0x27, 0x12, 0x09, 0x0a,
	0x05, 0x4e, 0x4c, 0x5f, 0x42, 0x45, 0x10, 0x28, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x4c, 0x5f, 0x4e,
	0x4c, 0x10, 0x29, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x41, 0x55, 0x10, 0x2b, 0x12, 0x09,
	0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x42, 0x5a, 0x10, 0x2c, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e, 0x5f,
	0x43, 0x41, 0x10, 0x2d, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x43, 0x42, 0x10, 0x2e, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x47, 0x42, 0x10, 0x2f, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e,
	0x5f, 0x49, 0x4e, 0x10, 0x30, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x49, 0x45, 0x10, 0x31,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x4a, 0x4d, 0x10, 0x32, 0x12, 0x09, 0x0a, 0x05, 0x45,
	0x4e, 0x5f, 0x4e, 0x5a, 0x10, 0x33, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x50, 0x48, 0x10,
	0x34, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x5a, 0x41, 0x10, 0x35, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x4e, 0x5f, 0x54, 0x54, 0x10, 0x36, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x55, 0x53,
	0x10, 0x37, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x54, 0x10, 0x39, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x4b,
	0x10, 0x3a, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x4f, 0x10, 0x3b, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x41,
	0x10, 0x3c, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x49, 0x10, 0x3e, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x52,
	0x5f, 0x42, 0x45, 0x10, 0x3f, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x52, 0x5f, 0x43, 0x41, 0x10, 0x41,
	0x12, 0x09, 0x0a, 0x05, 0x46, 0x52, 0x5f, 0x46, 0x52, 0x10, 0x44, 0x12, 0x09, 0x0a, 0x05, 0x46,
	0x52, 0x5f, 0x4c, 0x55, 0x10, 0x45, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x52, 0x5f, 0x43, 0x48, 0x10,
	0x4a, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x44, 0x5f, 0x49, 0x45, 0x10, 0x4d, 0x12, 0x06, 0x0a, 0x02,
	0x47, 0x44, 0x10, 0x4e, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x5f, 0x41, 0x54, 0x10, 0x51, 0x12,
	0x09, 0x0a, 0x05, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x10, 0x52, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45,
	0x5f, 0x4c, 0x49, 0x10, 0x53, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x5f, 0x4c, 0x55, 0x10, 0x54,
	0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x5f, 0x43, 0x48, 0x10, 0x55, 0x12, 0x06, 0x0a, 0x02, 0x45,
	0x4c, 0x10, 0x56, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x4e, 0x10, 0x57, 0x12, 0x06, 0x0a, 0x02, 0x47,
	0x55, 0x10, 0x58, 0x12, 0x06, 0x0a, 0x02, 0x48, 0x45, 0x10, 0x5a, 0x12, 0x06, 0x0a, 0x02, 0x48,
	0x49, 0x10, 0x5b, 0x12, 0x06, 0x0a, 0x02, 0x48, 0x55, 0x10, 0x5c, 0x12, 0x06, 0x0a, 0x02, 0x49,
	0x53, 0x10, 0x5d, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x44, 0x10, 0x5f, 0x12, 0x09, 0x0a, 0x05, 0x49,
	0x54, 0x5f, 0x49, 0x54, 0x10, 0x60, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x54, 0x5f, 0x43, 0x48, 0x10,
	0x61, 0x12, 0x06, 0x0a, 0x02, 0x4a, 0x41, 0x10, 0x62, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x4e, 0x10,
	0x63, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x53, 0x10, 0x64, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x4b, 0x10,
	0x65, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x4d, 0x10, 0x66, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x4f, 0x10,
	0x68, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x4f, 0x10, 0x6a, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x41, 0x10,
	0x6b, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x56, 0x10, 0x6c, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x54, 0x10,
	0x6d, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x53, 0x5f, 0x42, 0x4e, 0x10, 0x6e, 0x12, 0x09, 0x0a, 0x05,
	0x4d, 0x53, 0x5f, 0x4d, 0x59, 0x10, 0x6f, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x4c, 0x10, 0x70, 0x12,
	0x06, 0x0a, 0x02, 0x4d, 0x54, 0x10, 0x71, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x49, 0x10, 0x73, 0x12,
	0x06, 0x0a, 0x02, 0x4d, 0x52, 0x10, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x4e, 0x10, 0x76, 0x12,
	0x06, 0x0a, 0x02, 0x4e, 0x45, 0x10, 0x77, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x4f, 0x5f, 0x4e, 0x4f,
	0x10, 0x79, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x52, 0x10, 0x7a, 0x12, 0x06, 0x0a, 0x02, 0x50, 0x4c,
	0x10, 0x7b, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x54, 0x5f, 0x42, 0x52, 0x10, 0x7c, 0x12, 0x09, 0x0a,
	0x05, 0x50, 0x54, 0x5f, 0x50, 0x54, 0x10, 0x7d, 0x12, 0x06, 0x0a, 0x02, 0x50, 0x41, 0x10, 0x7e,
	0x12, 0x06, 0x0a, 0x02, 0x52, 0x4d, 0x10, 0x7f, 0x12, 0x0a, 0x0a, 0x05, 0x52, 0x4f, 0x5f, 0x4d,
	0x4f, 0x10, 0x80, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x52, 0x4f, 0x10, 0x81, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x52, 0x55, 0x10, 0x82, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x52, 0x55, 0x5f, 0x4d, 0x4f, 0x10,
	0x83, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x41, 0x10, 0x85, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x53,
	0x52, 0x5f, 0x53, 0x50, 0x10, 0x87, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x4e, 0x10, 0x89, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x53, 0x44, 0x10, 0x8a, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x49, 0x10,
	0x8b, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x4b, 0x10, 0x8c, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53,
	0x4c, 0x10, 0x8d, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x4f, 0x10, 0x8e, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x53, 0x42, 0x10, 0x8f, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x53, 0x5f, 0x41, 0x52, 0x10,
	0x90, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x53, 0x5f, 0x42, 0x4f, 0x10, 0x91, 0x01, 0x12, 0x0a,
	0x0a, 0x05, 0x45, 0x53, 0x5f, 0x43, 0x4c, 0x10, 0x92, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x53,
	0x5f, 0x43, 0x4f, 0x10, 0x93, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x53, 0x5f, 0x43, 0x52, 0x10,
	0x94, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x53, 0x5f, 0x44, 0x4f, 0x10, 0x95, 0x01, 0x12, 0x0a,
	0x0a, 0x05, 0x45, 0x53, 0x5f, 0x45, 0x43, 0x10, 0x96, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x53,
	0x5f, 0x53, 0x56, 0x10, 0x97, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x53, 0x5f, 0x47, 0x54, 0x10,
	0x98, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x53, 0x5f, 0x48, 0x4e, 0x10, 0x99, 0x01, 0x12, 0x0a,
	0x0a, 0x05, 0x45, 0x53, 0x5f, 0x4d, 0x58, 0x10, 0x9a, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x53,
	0x5f, 0x4e, 0x49, 0x10, 0x9b, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x53, 0x5f, 0x50, 0x41, 0x10,
	0x9c, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x53, 0x5f, 0x50, 0x59, 0x10, 0x9d, 0x01, 0x12, 0x0a,
	0x0a, 0x05, 0x45, 0x53, 0x5f, 0x50, 0x45, 0x10, 0x9e, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x53,
	0x5f, 0x50, 0x52, 0x10, 0x9f, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x53, 0x5f, 0x45, 0x53, 0x10,
	0xa0, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x53, 0x5f, 0x55, 0x59, 0x10, 0xa1, 0x01, 0x12, 0x0a,
	0x0a, 0x05, 0x45, 0x53, 0x5f, 0x56, 0x45, 0x10, 0xa2, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x57,
	0x10, 0xa3, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x53, 0x56, 0x5f, 0x46, 0x49, 0x10, 0xa4, 0x01, 0x12,
	0x0a, 0x0a, 0x05, 0x53, 0x56, 0x5f, 0x53, 0x45, 0x10, 0xa5, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54,
	0x47, 0x10, 0xa6, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x41, 0x10, 0xa7, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x54, 0x54, 0x10, 0xa8, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x45, 0x10, 0xa9, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x54, 0x48, 0x10, 0xaa, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x42, 0x4f, 0x10, 0xab,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x53, 0x10, 0xac, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x52,
	0x10, 0xad, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x4b, 0x10, 0xae, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x55, 0x4b, 0x10, 0xaf, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x55, 0x54, 0x46, 0x5f, 0x38, 0x10, 0xb0,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x55, 0x52, 0x10, 0xb1, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x55, 0x5a,
	0x5f, 0x55, 0x5a, 0x10, 0xb3, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x56, 0x49, 0x10, 0xb4, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x43, 0x59, 0x10, 0xb5, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x58, 0x48, 0x10, 0xb6,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x59, 0x49, 0x10, 0xb7, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x5a, 0x55,
	0x10, 0xb8, 0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x45, 0x5f, 0x41, 0x4e,
	0x59, 0x10, 0xf4, 0x03, 0x42, 0x53, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x50,
	0x01, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_enums_locale_proto_rawDescOnce sync.Once
	file_api_enums_locale_proto_rawDescData = file_api_enums_locale_proto_rawDesc
)

func file_api_enums_locale_proto_rawDescGZIP() []byte {
	file_api_enums_locale_proto_rawDescOnce.Do(func() {
		file_api_enums_locale_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_enums_locale_proto_rawDescData)
	})
	return file_api_enums_locale_proto_rawDescData
}

var file_api_enums_locale_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_enums_locale_proto_goTypes = []interface{}{
	(Locale)(0), // 0: google.retail.enums.locale.Locale
}
var file_api_enums_locale_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_enums_locale_proto_init() }
func file_api_enums_locale_proto_init() {
	if File_api_enums_locale_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_enums_locale_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_enums_locale_proto_goTypes,
		DependencyIndexes: file_api_enums_locale_proto_depIdxs,
		EnumInfos:         file_api_enums_locale_proto_enumTypes,
	}.Build()
	File_api_enums_locale_proto = out.File
	file_api_enums_locale_proto_rawDesc = nil
	file_api_enums_locale_proto_goTypes = nil
	file_api_enums_locale_proto_depIdxs = nil
}
