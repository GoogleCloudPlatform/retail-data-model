// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.10
// source: api/enums/currency.proto

package enums

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Currency int32

const (
	Currency_CURRENCY_UNKNOWN Currency = 0
	Currency_AED              Currency = 1
	Currency_AFN              Currency = 2
	Currency_ALL              Currency = 3
	Currency_AMD              Currency = 4
	Currency_ANG              Currency = 5
	Currency_AOA              Currency = 6
	Currency_ARS              Currency = 7
	Currency_AUD              Currency = 8
	Currency_AWG              Currency = 9
	Currency_AZN              Currency = 10
	Currency_BAM              Currency = 11
	Currency_BBD              Currency = 12
	Currency_BDT              Currency = 13
	Currency_BGN              Currency = 14
	Currency_BHD              Currency = 15
	Currency_BIF              Currency = 16
	Currency_BMD              Currency = 17
	Currency_BND              Currency = 18
	Currency_BOB              Currency = 19
	Currency_BRL              Currency = 20
	Currency_BSD              Currency = 21
	Currency_BTN              Currency = 22
	Currency_BWP              Currency = 23
	Currency_BYN              Currency = 24
	Currency_BZD              Currency = 25
	Currency_CAD              Currency = 26
	Currency_CDF              Currency = 27
	Currency_CHF              Currency = 28
	Currency_CLP              Currency = 29
	Currency_CNY              Currency = 30
	Currency_COP              Currency = 31
	Currency_CRC              Currency = 32
	Currency_CUC              Currency = 33
	Currency_CUP              Currency = 34
	Currency_CVE              Currency = 35
	Currency_CZK              Currency = 36
	Currency_DJF              Currency = 37
	Currency_DKK              Currency = 38
	Currency_DOP              Currency = 39
	Currency_DZD              Currency = 40
	Currency_EGP              Currency = 41
	Currency_ERN              Currency = 42
	Currency_ETB              Currency = 43
	Currency_EUR              Currency = 44
	Currency_FJD              Currency = 45
	Currency_FKP              Currency = 46
	Currency_GBP              Currency = 47
	Currency_GEL              Currency = 48
	Currency_GGP              Currency = 49
	Currency_GHS              Currency = 50
	Currency_GIP              Currency = 51
	Currency_GMD              Currency = 52
	Currency_GNF              Currency = 53
	Currency_GTQ              Currency = 54
	Currency_GYD              Currency = 55
	Currency_HKD              Currency = 56
	Currency_HNL              Currency = 57
	Currency_HRK              Currency = 58
	Currency_HTG              Currency = 59
	Currency_HUF              Currency = 60
	Currency_IDR              Currency = 61
	Currency_ILS              Currency = 62
	Currency_IMP              Currency = 63
	Currency_INR              Currency = 64
	Currency_IQD              Currency = 65
	Currency_IRR              Currency = 66
	Currency_ISK              Currency = 67
	Currency_JEP              Currency = 68
	Currency_JMD              Currency = 69
	Currency_JOD              Currency = 70
	Currency_JPY              Currency = 71
	Currency_KES              Currency = 72
	Currency_KGS              Currency = 73
	Currency_KHR              Currency = 74
	Currency_KMF              Currency = 75
	Currency_KPW              Currency = 76
	Currency_KRW              Currency = 77
	Currency_KWD              Currency = 78
	Currency_KYD              Currency = 79
	Currency_KZT              Currency = 80
	Currency_LAK              Currency = 81
	Currency_LBP              Currency = 82
	Currency_LKR              Currency = 83
	Currency_LRD              Currency = 84
	Currency_LSL              Currency = 85
	Currency_LYD              Currency = 86
	Currency_MAD              Currency = 87
	Currency_MDL              Currency = 88
	Currency_MGA              Currency = 89
	Currency_MKD              Currency = 90
	Currency_MMK              Currency = 91
	Currency_MNT              Currency = 92
	Currency_MOP              Currency = 93
	Currency_MRU              Currency = 94
	Currency_MUR              Currency = 95
	Currency_MVR              Currency = 96
	Currency_MWK              Currency = 97
	Currency_MXN              Currency = 98
	Currency_MYR              Currency = 99
	Currency_MZN              Currency = 100
	Currency_NAD              Currency = 101
	Currency_NGN              Currency = 102
	Currency_NIO              Currency = 103
	Currency_NOK              Currency = 104
	Currency_NPR              Currency = 105
	Currency_NZD              Currency = 106
	Currency_OMR              Currency = 107
	Currency_PAB              Currency = 108
	Currency_PEN              Currency = 109
	Currency_PGK              Currency = 110
	Currency_PHP              Currency = 111
	Currency_PKR              Currency = 112
	Currency_PLN              Currency = 113
	Currency_PYG              Currency = 114
	Currency_QAR              Currency = 115
	Currency_RON              Currency = 116
	Currency_RSD              Currency = 117
	Currency_RUB              Currency = 118
	Currency_RWF              Currency = 119
	Currency_SAR              Currency = 120
	Currency_SBD              Currency = 121
	Currency_SCR              Currency = 122
	Currency_SDG              Currency = 123
	Currency_SEK              Currency = 124
	Currency_SGD              Currency = 125
	Currency_SHP              Currency = 126
	Currency_SLL              Currency = 127
	Currency_SOS              Currency = 128
	Currency_SPL              Currency = 129
	Currency_SRD              Currency = 130
	Currency_STN              Currency = 131
	Currency_SVC              Currency = 132
	Currency_SYP              Currency = 133
	Currency_SZL              Currency = 134
	Currency_THB              Currency = 135
	Currency_TJS              Currency = 136
	Currency_TMT              Currency = 137
	Currency_TND              Currency = 138
	Currency_TOP              Currency = 139
	Currency_TRY              Currency = 140
	Currency_TTD              Currency = 141
	Currency_TVD              Currency = 142
	Currency_TWD              Currency = 143
	Currency_TZS              Currency = 144
	Currency_UAH              Currency = 145
	Currency_UGX              Currency = 146
	Currency_USD              Currency = 147
	Currency_UYU              Currency = 148
	Currency_UZS              Currency = 149
	Currency_VEF              Currency = 150
	Currency_VND              Currency = 151
	Currency_VUV              Currency = 152
	Currency_WST              Currency = 153
	Currency_XAF              Currency = 154
	Currency_XCD              Currency = 155
	Currency_XDR              Currency = 156
	Currency_XOF              Currency = 157
	Currency_XPF              Currency = 158
	Currency_YER              Currency = 159
	Currency_ZAR              Currency = 160
	Currency_ZMW              Currency = 161
	Currency_ZWD              Currency = 162
)

// Enum value maps for Currency.
var (
	Currency_name = map[int32]string{
		0:   "CURRENCY_UNKNOWN",
		1:   "AED",
		2:   "AFN",
		3:   "ALL",
		4:   "AMD",
		5:   "ANG",
		6:   "AOA",
		7:   "ARS",
		8:   "AUD",
		9:   "AWG",
		10:  "AZN",
		11:  "BAM",
		12:  "BBD",
		13:  "BDT",
		14:  "BGN",
		15:  "BHD",
		16:  "BIF",
		17:  "BMD",
		18:  "BND",
		19:  "BOB",
		20:  "BRL",
		21:  "BSD",
		22:  "BTN",
		23:  "BWP",
		24:  "BYN",
		25:  "BZD",
		26:  "CAD",
		27:  "CDF",
		28:  "CHF",
		29:  "CLP",
		30:  "CNY",
		31:  "COP",
		32:  "CRC",
		33:  "CUC",
		34:  "CUP",
		35:  "CVE",
		36:  "CZK",
		37:  "DJF",
		38:  "DKK",
		39:  "DOP",
		40:  "DZD",
		41:  "EGP",
		42:  "ERN",
		43:  "ETB",
		44:  "EUR",
		45:  "FJD",
		46:  "FKP",
		47:  "GBP",
		48:  "GEL",
		49:  "GGP",
		50:  "GHS",
		51:  "GIP",
		52:  "GMD",
		53:  "GNF",
		54:  "GTQ",
		55:  "GYD",
		56:  "HKD",
		57:  "HNL",
		58:  "HRK",
		59:  "HTG",
		60:  "HUF",
		61:  "IDR",
		62:  "ILS",
		63:  "IMP",
		64:  "INR",
		65:  "IQD",
		66:  "IRR",
		67:  "ISK",
		68:  "JEP",
		69:  "JMD",
		70:  "JOD",
		71:  "JPY",
		72:  "KES",
		73:  "KGS",
		74:  "KHR",
		75:  "KMF",
		76:  "KPW",
		77:  "KRW",
		78:  "KWD",
		79:  "KYD",
		80:  "KZT",
		81:  "LAK",
		82:  "LBP",
		83:  "LKR",
		84:  "LRD",
		85:  "LSL",
		86:  "LYD",
		87:  "MAD",
		88:  "MDL",
		89:  "MGA",
		90:  "MKD",
		91:  "MMK",
		92:  "MNT",
		93:  "MOP",
		94:  "MRU",
		95:  "MUR",
		96:  "MVR",
		97:  "MWK",
		98:  "MXN",
		99:  "MYR",
		100: "MZN",
		101: "NAD",
		102: "NGN",
		103: "NIO",
		104: "NOK",
		105: "NPR",
		106: "NZD",
		107: "OMR",
		108: "PAB",
		109: "PEN",
		110: "PGK",
		111: "PHP",
		112: "PKR",
		113: "PLN",
		114: "PYG",
		115: "QAR",
		116: "RON",
		117: "RSD",
		118: "RUB",
		119: "RWF",
		120: "SAR",
		121: "SBD",
		122: "SCR",
		123: "SDG",
		124: "SEK",
		125: "SGD",
		126: "SHP",
		127: "SLL",
		128: "SOS",
		129: "SPL",
		130: "SRD",
		131: "STN",
		132: "SVC",
		133: "SYP",
		134: "SZL",
		135: "THB",
		136: "TJS",
		137: "TMT",
		138: "TND",
		139: "TOP",
		140: "TRY",
		141: "TTD",
		142: "TVD",
		143: "TWD",
		144: "TZS",
		145: "UAH",
		146: "UGX",
		147: "USD",
		148: "UYU",
		149: "UZS",
		150: "VEF",
		151: "VND",
		152: "VUV",
		153: "WST",
		154: "XAF",
		155: "XCD",
		156: "XDR",
		157: "XOF",
		158: "XPF",
		159: "YER",
		160: "ZAR",
		161: "ZMW",
		162: "ZWD",
	}
	Currency_value = map[string]int32{
		"CURRENCY_UNKNOWN": 0,
		"AED":              1,
		"AFN":              2,
		"ALL":              3,
		"AMD":              4,
		"ANG":              5,
		"AOA":              6,
		"ARS":              7,
		"AUD":              8,
		"AWG":              9,
		"AZN":              10,
		"BAM":              11,
		"BBD":              12,
		"BDT":              13,
		"BGN":              14,
		"BHD":              15,
		"BIF":              16,
		"BMD":              17,
		"BND":              18,
		"BOB":              19,
		"BRL":              20,
		"BSD":              21,
		"BTN":              22,
		"BWP":              23,
		"BYN":              24,
		"BZD":              25,
		"CAD":              26,
		"CDF":              27,
		"CHF":              28,
		"CLP":              29,
		"CNY":              30,
		"COP":              31,
		"CRC":              32,
		"CUC":              33,
		"CUP":              34,
		"CVE":              35,
		"CZK":              36,
		"DJF":              37,
		"DKK":              38,
		"DOP":              39,
		"DZD":              40,
		"EGP":              41,
		"ERN":              42,
		"ETB":              43,
		"EUR":              44,
		"FJD":              45,
		"FKP":              46,
		"GBP":              47,
		"GEL":              48,
		"GGP":              49,
		"GHS":              50,
		"GIP":              51,
		"GMD":              52,
		"GNF":              53,
		"GTQ":              54,
		"GYD":              55,
		"HKD":              56,
		"HNL":              57,
		"HRK":              58,
		"HTG":              59,
		"HUF":              60,
		"IDR":              61,
		"ILS":              62,
		"IMP":              63,
		"INR":              64,
		"IQD":              65,
		"IRR":              66,
		"ISK":              67,
		"JEP":              68,
		"JMD":              69,
		"JOD":              70,
		"JPY":              71,
		"KES":              72,
		"KGS":              73,
		"KHR":              74,
		"KMF":              75,
		"KPW":              76,
		"KRW":              77,
		"KWD":              78,
		"KYD":              79,
		"KZT":              80,
		"LAK":              81,
		"LBP":              82,
		"LKR":              83,
		"LRD":              84,
		"LSL":              85,
		"LYD":              86,
		"MAD":              87,
		"MDL":              88,
		"MGA":              89,
		"MKD":              90,
		"MMK":              91,
		"MNT":              92,
		"MOP":              93,
		"MRU":              94,
		"MUR":              95,
		"MVR":              96,
		"MWK":              97,
		"MXN":              98,
		"MYR":              99,
		"MZN":              100,
		"NAD":              101,
		"NGN":              102,
		"NIO":              103,
		"NOK":              104,
		"NPR":              105,
		"NZD":              106,
		"OMR":              107,
		"PAB":              108,
		"PEN":              109,
		"PGK":              110,
		"PHP":              111,
		"PKR":              112,
		"PLN":              113,
		"PYG":              114,
		"QAR":              115,
		"RON":              116,
		"RSD":              117,
		"RUB":              118,
		"RWF":              119,
		"SAR":              120,
		"SBD":              121,
		"SCR":              122,
		"SDG":              123,
		"SEK":              124,
		"SGD":              125,
		"SHP":              126,
		"SLL":              127,
		"SOS":              128,
		"SPL":              129,
		"SRD":              130,
		"STN":              131,
		"SVC":              132,
		"SYP":              133,
		"SZL":              134,
		"THB":              135,
		"TJS":              136,
		"TMT":              137,
		"TND":              138,
		"TOP":              139,
		"TRY":              140,
		"TTD":              141,
		"TVD":              142,
		"TWD":              143,
		"TZS":              144,
		"UAH":              145,
		"UGX":              146,
		"USD":              147,
		"UYU":              148,
		"UZS":              149,
		"VEF":              150,
		"VND":              151,
		"VUV":              152,
		"WST":              153,
		"XAF":              154,
		"XCD":              155,
		"XDR":              156,
		"XOF":              157,
		"XPF":              158,
		"YER":              159,
		"ZAR":              160,
		"ZMW":              161,
		"ZWD":              162,
	}
)

func (x Currency) Enum() *Currency {
	p := new(Currency)
	*p = x
	return p
}

func (x Currency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Currency) Descriptor() protoreflect.EnumDescriptor {
	return file_api_enums_currency_proto_enumTypes[0].Descriptor()
}

func (Currency) Type() protoreflect.EnumType {
	return &file_api_enums_currency_proto_enumTypes[0]
}

func (x Currency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Currency.Descriptor instead.
func (Currency) EnumDescriptor() ([]byte, []int) {
	return file_api_enums_currency_proto_rawDescGZIP(), []int{0}
}

var File_api_enums_currency_proto protoreflect.FileDescriptor

var file_api_enums_currency_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2a, 0xf5, 0x0b, 0x0a, 0x08, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43,
	0x59, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x46, 0x4e, 0x10, 0x02, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x4c, 0x4c, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4d, 0x44, 0x10, 0x04, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4f, 0x41, 0x10,
	0x06, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x52, 0x53, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x55,
	0x44, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x57, 0x47, 0x10, 0x09, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x5a, 0x4e, 0x10, 0x0a, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x41, 0x4d, 0x10, 0x0b, 0x12, 0x07,
	0x0a, 0x03, 0x42, 0x42, 0x44, 0x10, 0x0c, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x44, 0x54, 0x10, 0x0d,
	0x12, 0x07, 0x0a, 0x03, 0x42, 0x47, 0x4e, 0x10, 0x0e, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x48, 0x44,
	0x10, 0x0f, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x49, 0x46, 0x10, 0x10, 0x12, 0x07, 0x0a, 0x03, 0x42,
	0x4d, 0x44, 0x10, 0x11, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x4e, 0x44, 0x10, 0x12, 0x12, 0x07, 0x0a,
	0x03, 0x42, 0x4f, 0x42, 0x10, 0x13, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x52, 0x4c, 0x10, 0x14, 0x12,
	0x07, 0x0a, 0x03, 0x42, 0x53, 0x44, 0x10, 0x15, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x54, 0x4e, 0x10,
	0x16, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x57, 0x50, 0x10, 0x17, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x59,
	0x4e, 0x10, 0x18, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x5a, 0x44, 0x10, 0x19, 0x12, 0x07, 0x0a, 0x03,
	0x43, 0x41, 0x44, 0x10, 0x1a, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x44, 0x46, 0x10, 0x1b, 0x12, 0x07,
	0x0a, 0x03, 0x43, 0x48, 0x46, 0x10, 0x1c, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4c, 0x50, 0x10, 0x1d,
	0x12, 0x07, 0x0a, 0x03, 0x43, 0x4e, 0x59, 0x10, 0x1e, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4f, 0x50,
	0x10, 0x1f, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x52, 0x43, 0x10, 0x20, 0x12, 0x07, 0x0a, 0x03, 0x43,
	0x55, 0x43, 0x10, 0x21, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x55, 0x50, 0x10, 0x22, 0x12, 0x07, 0x0a,
	0x03, 0x43, 0x56, 0x45, 0x10, 0x23, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x5a, 0x4b, 0x10, 0x24, 0x12,
	0x07, 0x0a, 0x03, 0x44, 0x4a, 0x46, 0x10, 0x25, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x4b, 0x4b, 0x10,
	0x26, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x4f, 0x50, 0x10, 0x27, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x5a,
	0x44, 0x10, 0x28, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x47, 0x50, 0x10, 0x29, 0x12, 0x07, 0x0a, 0x03,
	0x45, 0x52, 0x4e, 0x10, 0x2a, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x54, 0x42, 0x10, 0x2b, 0x12, 0x07,
	0x0a, 0x03, 0x45, 0x55, 0x52, 0x10, 0x2c, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x4a, 0x44, 0x10, 0x2d,
	0x12, 0x07, 0x0a, 0x03, 0x46, 0x4b, 0x50, 0x10, 0x2e, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x42, 0x50,
	0x10, 0x2f, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x4c, 0x10, 0x30, 0x12, 0x07, 0x0a, 0x03, 0x47,
	0x47, 0x50, 0x10, 0x31, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x48, 0x53, 0x10, 0x32, 0x12, 0x07, 0x0a,
	0x03, 0x47, 0x49, 0x50, 0x10, 0x33, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x4d, 0x44, 0x10, 0x34, 0x12,
	0x07, 0x0a, 0x03, 0x47, 0x4e, 0x46, 0x10, 0x35, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x54, 0x51, 0x10,
	0x36, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x59, 0x44, 0x10, 0x37, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x4b,
	0x44, 0x10, 0x38, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x4e, 0x4c, 0x10, 0x39, 0x12, 0x07, 0x0a, 0x03,
	0x48, 0x52, 0x4b, 0x10, 0x3a, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x54, 0x47, 0x10, 0x3b, 0x12, 0x07,
	0x0a, 0x03, 0x48, 0x55, 0x46, 0x10, 0x3c, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x44, 0x52, 0x10, 0x3d,
	0x12, 0x07, 0x0a, 0x03, 0x49, 0x4c, 0x53, 0x10, 0x3e, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4d, 0x50,
	0x10, 0x3f, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4e, 0x52, 0x10, 0x40, 0x12, 0x07, 0x0a, 0x03, 0x49,
	0x51, 0x44, 0x10, 0x41, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x52, 0x52, 0x10, 0x42, 0x12, 0x07, 0x0a,
	0x03, 0x49, 0x53, 0x4b, 0x10, 0x43, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x45, 0x50, 0x10, 0x44, 0x12,
	0x07, 0x0a, 0x03, 0x4a, 0x4d, 0x44, 0x10, 0x45, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x4f, 0x44, 0x10,
	0x46, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x50, 0x59, 0x10, 0x47, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x45,
	0x53, 0x10, 0x48, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x47, 0x53, 0x10, 0x49, 0x12, 0x07, 0x0a, 0x03,
	0x4b, 0x48, 0x52, 0x10, 0x4a, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x4d, 0x46, 0x10, 0x4b, 0x12, 0x07,
	0x0a, 0x03, 0x4b, 0x50, 0x57, 0x10, 0x4c, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x52, 0x57, 0x10, 0x4d,
	0x12, 0x07, 0x0a, 0x03, 0x4b, 0x57, 0x44, 0x10, 0x4e, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x59, 0x44,
	0x10, 0x4f, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x5a, 0x54, 0x10, 0x50, 0x12, 0x07, 0x0a, 0x03, 0x4c,
	0x41, 0x4b, 0x10, 0x51, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x42, 0x50, 0x10, 0x52, 0x12, 0x07, 0x0a,
	0x03, 0x4c, 0x4b, 0x52, 0x10, 0x53, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x52, 0x44, 0x10, 0x54, 0x12,
	0x07, 0x0a, 0x03, 0x4c, 0x53, 0x4c, 0x10, 0x55, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x59, 0x44, 0x10,
	0x56, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x44, 0x10, 0x57, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x44,
	0x4c, 0x10, 0x58, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x47, 0x41, 0x10, 0x59, 0x12, 0x07, 0x0a, 0x03,
	0x4d, 0x4b, 0x44, 0x10, 0x5a, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x4d, 0x4b, 0x10, 0x5b, 0x12, 0x07,
	0x0a, 0x03, 0x4d, 0x4e, 0x54, 0x10, 0x5c, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x4f, 0x50, 0x10, 0x5d,
	0x12, 0x07, 0x0a, 0x03, 0x4d, 0x52, 0x55, 0x10, 0x5e, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x55, 0x52,
	0x10, 0x5f, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x56, 0x52, 0x10, 0x60, 0x12, 0x07, 0x0a, 0x03, 0x4d,
	0x57, 0x4b, 0x10, 0x61, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x58, 0x4e, 0x10, 0x62, 0x12, 0x07, 0x0a,
	0x03, 0x4d, 0x59, 0x52, 0x10, 0x63, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x5a, 0x4e, 0x10, 0x64, 0x12,
	0x07, 0x0a, 0x03, 0x4e, 0x41, 0x44, 0x10, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x47, 0x4e, 0x10,
	0x66, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x49, 0x4f, 0x10, 0x67, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x4f,
	0x4b, 0x10, 0x68, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x50, 0x52, 0x10, 0x69, 0x12, 0x07, 0x0a, 0x03,
	0x4e, 0x5a, 0x44, 0x10, 0x6a, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x4d, 0x52, 0x10, 0x6b, 0x12, 0x07,
	0x0a, 0x03, 0x50, 0x41, 0x42, 0x10, 0x6c, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x45, 0x4e, 0x10, 0x6d,
	0x12, 0x07, 0x0a, 0x03, 0x50, 0x47, 0x4b, 0x10, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x48, 0x50,
	0x10, 0x6f, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x4b, 0x52, 0x10, 0x70, 0x12, 0x07, 0x0a, 0x03, 0x50,
	0x4c, 0x4e, 0x10, 0x71, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x59, 0x47, 0x10, 0x72, 0x12, 0x07, 0x0a,
	0x03, 0x51, 0x41, 0x52, 0x10, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x4f, 0x4e, 0x10, 0x74, 0x12,
	0x07, 0x0a, 0x03, 0x52, 0x53, 0x44, 0x10, 0x75, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x55, 0x42, 0x10,
	0x76, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x57, 0x46, 0x10, 0x77, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x41,
	0x52, 0x10, 0x78, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x42, 0x44, 0x10, 0x79, 0x12, 0x07, 0x0a, 0x03,
	0x53, 0x43, 0x52, 0x10, 0x7a, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x44, 0x47, 0x10, 0x7b, 0x12, 0x07,
	0x0a, 0x03, 0x53, 0x45, 0x4b, 0x10, 0x7c, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x47, 0x44, 0x10, 0x7d,
	0x12, 0x07, 0x0a, 0x03, 0x53, 0x48, 0x50, 0x10, 0x7e, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x4c, 0x4c,
	0x10, 0x7f, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x4f, 0x53, 0x10, 0x80, 0x01, 0x12, 0x08, 0x0a, 0x03,
	0x53, 0x50, 0x4c, 0x10, 0x81, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x52, 0x44, 0x10, 0x82, 0x01,
	0x12, 0x08, 0x0a, 0x03, 0x53, 0x54, 0x4e, 0x10, 0x83, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x56,
	0x43, 0x10, 0x84, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x59, 0x50, 0x10, 0x85, 0x01, 0x12, 0x08,
	0x0a, 0x03, 0x53, 0x5a, 0x4c, 0x10, 0x86, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x48, 0x42, 0x10,
	0x87, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x4a, 0x53, 0x10, 0x88, 0x01, 0x12, 0x08, 0x0a, 0x03,
	0x54, 0x4d, 0x54, 0x10, 0x89, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x4e, 0x44, 0x10, 0x8a, 0x01,
	0x12, 0x08, 0x0a, 0x03, 0x54, 0x4f, 0x50, 0x10, 0x8b, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x52,
	0x59, 0x10, 0x8c, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x54, 0x44, 0x10, 0x8d, 0x01, 0x12, 0x08,
	0x0a, 0x03, 0x54, 0x56, 0x44, 0x10, 0x8e, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x57, 0x44, 0x10,
	0x8f, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x5a, 0x53, 0x10, 0x90, 0x01, 0x12, 0x08, 0x0a, 0x03,
	0x55, 0x41, 0x48, 0x10, 0x91, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x47, 0x58, 0x10, 0x92, 0x01,
	0x12, 0x08, 0x0a, 0x03, 0x55, 0x53, 0x44, 0x10, 0x93, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x59,
	0x55, 0x10, 0x94, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x5a, 0x53, 0x10, 0x95, 0x01, 0x12, 0x08,
	0x0a, 0x03, 0x56, 0x45, 0x46, 0x10, 0x96, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x56, 0x4e, 0x44, 0x10,
	0x97, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x56, 0x55, 0x56, 0x10, 0x98, 0x01, 0x12, 0x08, 0x0a, 0x03,
	0x57, 0x53, 0x54, 0x10, 0x99, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x41, 0x46, 0x10, 0x9a, 0x01,
	0x12, 0x08, 0x0a, 0x03, 0x58, 0x43, 0x44, 0x10, 0x9b, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x44,
	0x52, 0x10, 0x9c, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x4f, 0x46, 0x10, 0x9d, 0x01, 0x12, 0x08,
	0x0a, 0x03, 0x58, 0x50, 0x46, 0x10, 0x9e, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x59, 0x45, 0x52, 0x10,
	0x9f, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x5a, 0x41, 0x52, 0x10, 0xa0, 0x01, 0x12, 0x08, 0x0a, 0x03,
	0x5a, 0x4d, 0x57, 0x10, 0xa1, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x5a, 0x57, 0x44, 0x10, 0xa2, 0x01,
	0x42, 0x4c, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x50, 0x01, 0x5a, 0x2f, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x72, 0x6d, 0x63, 0x67, 0x75,
	0x69, 0x6e, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2d, 0x64, 0x61,
	0x74, 0x61, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_enums_currency_proto_rawDescOnce sync.Once
	file_api_enums_currency_proto_rawDescData = file_api_enums_currency_proto_rawDesc
)

func file_api_enums_currency_proto_rawDescGZIP() []byte {
	file_api_enums_currency_proto_rawDescOnce.Do(func() {
		file_api_enums_currency_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_enums_currency_proto_rawDescData)
	})
	return file_api_enums_currency_proto_rawDescData
}

var file_api_enums_currency_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_enums_currency_proto_goTypes = []interface{}{
	(Currency)(0), // 0: google.retail.enums.currency.Currency
}
var file_api_enums_currency_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_enums_currency_proto_init() }
func file_api_enums_currency_proto_init() {
	if File_api_enums_currency_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_enums_currency_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_enums_currency_proto_goTypes,
		DependencyIndexes: file_api_enums_currency_proto_depIdxs,
		EnumInfos:         file_api_enums_currency_proto_enumTypes,
	}.Build()
	File_api_enums_currency_proto = out.File
	file_api_enums_currency_proto_rawDesc = nil
	file_api_enums_currency_proto_goTypes = nil
	file_api_enums_currency_proto_depIdxs = nil
}
