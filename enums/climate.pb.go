// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.10
// source: api/enums/climate.proto

package enums

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Climate int32

const (
	Climate_CLIMATE_UNKNOWN Climate = 0
	Climate_A               Climate = 5
	Climate_AF              Climate = 10
	Climate_AM              Climate = 15
	Climate_AW              Climate = 20
	Climate_B               Climate = 25
	Climate_BSK             Climate = 30
	Climate_BWH             Climate = 35
	Climate_BWK             Climate = 40
	Climate_C               Climate = 45
	Climate_CFA             Climate = 50
	Climate_CFB             Climate = 55
	Climate_CFC             Climate = 60
	Climate_CSA             Climate = 65
	Climate_CSB             Climate = 70
	Climate_CWA             Climate = 75
	Climate_D               Climate = 80
	Climate_DFA             Climate = 85
	Climate_DFB             Climate = 90
	Climate_DFC             Climate = 95
	Climate_DFD             Climate = 100
	Climate_DWA             Climate = 105
	Climate_DWB             Climate = 110
	Climate_DWC             Climate = 115
	Climate_DWD             Climate = 120
	Climate_E               Climate = 125
	Climate_EF              Climate = 130
	Climate_ET              Climate = 135
	Climate_H               Climate = 140
	Climate_WSH             Climate = 145
)

// Enum value maps for Climate.
var (
	Climate_name = map[int32]string{
		0:   "CLIMATE_UNKNOWN",
		5:   "A",
		10:  "AF",
		15:  "AM",
		20:  "AW",
		25:  "B",
		30:  "BSK",
		35:  "BWH",
		40:  "BWK",
		45:  "C",
		50:  "CFA",
		55:  "CFB",
		60:  "CFC",
		65:  "CSA",
		70:  "CSB",
		75:  "CWA",
		80:  "D",
		85:  "DFA",
		90:  "DFB",
		95:  "DFC",
		100: "DFD",
		105: "DWA",
		110: "DWB",
		115: "DWC",
		120: "DWD",
		125: "E",
		130: "EF",
		135: "ET",
		140: "H",
		145: "WSH",
	}
	Climate_value = map[string]int32{
		"CLIMATE_UNKNOWN": 0,
		"A":               5,
		"AF":              10,
		"AM":              15,
		"AW":              20,
		"B":               25,
		"BSK":             30,
		"BWH":             35,
		"BWK":             40,
		"C":               45,
		"CFA":             50,
		"CFB":             55,
		"CFC":             60,
		"CSA":             65,
		"CSB":             70,
		"CWA":             75,
		"D":               80,
		"DFA":             85,
		"DFB":             90,
		"DFC":             95,
		"DFD":             100,
		"DWA":             105,
		"DWB":             110,
		"DWC":             115,
		"DWD":             120,
		"E":               125,
		"EF":              130,
		"ET":              135,
		"H":               140,
		"WSH":             145,
	}
)

func (x Climate) Enum() *Climate {
	p := new(Climate)
	*p = x
	return p
}

func (x Climate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Climate) Descriptor() protoreflect.EnumDescriptor {
	return file_api_enums_climate_proto_enumTypes[0].Descriptor()
}

func (Climate) Type() protoreflect.EnumType {
	return &file_api_enums_climate_proto_enumTypes[0]
}

func (x Climate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Climate.Descriptor instead.
func (Climate) EnumDescriptor() ([]byte, []int) {
	return file_api_enums_climate_proto_rawDescGZIP(), []int{0}
}

var File_api_enums_climate_proto protoreflect.FileDescriptor

var file_api_enums_climate_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x63, 0x6c, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x63,
	0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x2a, 0x96, 0x02, 0x0a, 0x07, 0x43, 0x6c, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4c, 0x49, 0x4d, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x05, 0x0a, 0x01, 0x41, 0x10, 0x05, 0x12, 0x06,
	0x0a, 0x02, 0x41, 0x46, 0x10, 0x0a, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x4d, 0x10, 0x0f, 0x12, 0x06,
	0x0a, 0x02, 0x41, 0x57, 0x10, 0x14, 0x12, 0x05, 0x0a, 0x01, 0x42, 0x10, 0x19, 0x12, 0x07, 0x0a,
	0x03, 0x42, 0x53, 0x4b, 0x10, 0x1e, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x57, 0x48, 0x10, 0x23, 0x12,
	0x07, 0x0a, 0x03, 0x42, 0x57, 0x4b, 0x10, 0x28, 0x12, 0x05, 0x0a, 0x01, 0x43, 0x10, 0x2d, 0x12,
	0x07, 0x0a, 0x03, 0x43, 0x46, 0x41, 0x10, 0x32, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x46, 0x42, 0x10,
	0x37, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x46, 0x43, 0x10, 0x3c, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x53,
	0x41, 0x10, 0x41, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x53, 0x42, 0x10, 0x46, 0x12, 0x07, 0x0a, 0x03,
	0x43, 0x57, 0x41, 0x10, 0x4b, 0x12, 0x05, 0x0a, 0x01, 0x44, 0x10, 0x50, 0x12, 0x07, 0x0a, 0x03,
	0x44, 0x46, 0x41, 0x10, 0x55, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x46, 0x42, 0x10, 0x5a, 0x12, 0x07,
	0x0a, 0x03, 0x44, 0x46, 0x43, 0x10, 0x5f, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x46, 0x44, 0x10, 0x64,
	0x12, 0x07, 0x0a, 0x03, 0x44, 0x57, 0x41, 0x10, 0x69, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x57, 0x42,
	0x10, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x57, 0x43, 0x10, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x44,
	0x57, 0x44, 0x10, 0x78, 0x12, 0x05, 0x0a, 0x01, 0x45, 0x10, 0x7d, 0x12, 0x07, 0x0a, 0x02, 0x45,
	0x46, 0x10, 0x82, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x45, 0x54, 0x10, 0x87, 0x01, 0x12, 0x06, 0x0a,
	0x01, 0x48, 0x10, 0x8c, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x57, 0x53, 0x48, 0x10, 0x91, 0x01, 0x42,
	0x4c, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x72, 0x6d, 0x63, 0x67, 0x75, 0x69,
	0x6e, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2d, 0x64, 0x61, 0x74,
	0x61, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_enums_climate_proto_rawDescOnce sync.Once
	file_api_enums_climate_proto_rawDescData = file_api_enums_climate_proto_rawDesc
)

func file_api_enums_climate_proto_rawDescGZIP() []byte {
	file_api_enums_climate_proto_rawDescOnce.Do(func() {
		file_api_enums_climate_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_enums_climate_proto_rawDescData)
	})
	return file_api_enums_climate_proto_rawDescData
}

var file_api_enums_climate_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_enums_climate_proto_goTypes = []interface{}{
	(Climate)(0), // 0: google.retail.enums.climate.Climate
}
var file_api_enums_climate_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_enums_climate_proto_init() }
func file_api_enums_climate_proto_init() {
	if File_api_enums_climate_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_enums_climate_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_enums_climate_proto_goTypes,
		DependencyIndexes: file_api_enums_climate_proto_depIdxs,
		EnumInfos:         file_api_enums_climate_proto_enumTypes,
	}.Build()
	File_api_enums_climate_proto = out.File
	file_api_enums_climate_proto_rawDesc = nil
	file_api_enums_climate_proto_goTypes = nil
	file_api_enums_climate_proto_depIdxs = nil
}
