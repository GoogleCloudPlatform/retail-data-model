// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.10
// source: api/merchandise/model.proto

package pb

import (
	_ "github.com/GoogleCloudPlatform/protoc-gen-bq-schema/protos"
	pb "github.com/rrmcguinness/retail-data-model/common/pb"
	pb1 "github.com/rrmcguinness/retail-data-model/enterprise/pb"
	enums "github.com/rrmcguinness/retail-data-model/enums"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductAttributeRule_Type int32

const (
	ProductAttributeRule_RATIONAL   ProductAttributeRule_Type = 0
	ProductAttributeRule_IRRATIONAL ProductAttributeRule_Type = 1
	ProductAttributeRule_STRING     ProductAttributeRule_Type = 2
	ProductAttributeRule_DATE       ProductAttributeRule_Type = 3
	ProductAttributeRule_TIMESTAMP  ProductAttributeRule_Type = 4
)

// Enum value maps for ProductAttributeRule_Type.
var (
	ProductAttributeRule_Type_name = map[int32]string{
		0: "RATIONAL",
		1: "IRRATIONAL",
		2: "STRING",
		3: "DATE",
		4: "TIMESTAMP",
	}
	ProductAttributeRule_Type_value = map[string]int32{
		"RATIONAL":   0,
		"IRRATIONAL": 1,
		"STRING":     2,
		"DATE":       3,
		"TIMESTAMP":  4,
	}
)

func (x ProductAttributeRule_Type) Enum() *ProductAttributeRule_Type {
	p := new(ProductAttributeRule_Type)
	*p = x
	return p
}

func (x ProductAttributeRule_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductAttributeRule_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_merchandise_model_proto_enumTypes[0].Descriptor()
}

func (ProductAttributeRule_Type) Type() protoreflect.EnumType {
	return &file_api_merchandise_model_proto_enumTypes[0]
}

func (x ProductAttributeRule_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductAttributeRule_Type.Descriptor instead.
func (ProductAttributeRule_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{5, 0}
}

type Supplier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                *pb.VersionID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GeneralLedgerCode string        `protobuf:"bytes,2,opt,name=general_ledger_code,json=generalLedgerCode,proto3" json:"general_ledger_code,omitempty"`
}

func (x *Supplier) Reset() {
	*x = Supplier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Supplier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Supplier) ProtoMessage() {}

func (x *Supplier) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Supplier.ProtoReflect.Descriptor instead.
func (*Supplier) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{0}
}

func (x *Supplier) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Supplier) GetGeneralLedgerCode() string {
	if x != nil {
		return x.GeneralLedgerCode
	}
	return ""
}

type ProductTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *pb.VersionID               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Attributes  []*ProductTemplateAttribute `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *ProductTemplate) Reset() {
	*x = ProductTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductTemplate) ProtoMessage() {}

func (x *ProductTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductTemplate.ProtoReflect.Descriptor instead.
func (*ProductTemplate) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{1}
}

func (x *ProductTemplate) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ProductTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductTemplate) GetAttributes() []*ProductTemplateAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type ProductTemplateAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*ProductTemplateAttribute_RuleGroup
	//	*ProductTemplateAttribute_Rule
	Value isProductTemplateAttribute_Value `protobuf_oneof:"value"`
}

func (x *ProductTemplateAttribute) Reset() {
	*x = ProductTemplateAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductTemplateAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductTemplateAttribute) ProtoMessage() {}

func (x *ProductTemplateAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductTemplateAttribute.ProtoReflect.Descriptor instead.
func (*ProductTemplateAttribute) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{2}
}

func (m *ProductTemplateAttribute) GetValue() isProductTemplateAttribute_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ProductTemplateAttribute) GetRuleGroup() *ProductAttributeRuleGroup {
	if x, ok := x.GetValue().(*ProductTemplateAttribute_RuleGroup); ok {
		return x.RuleGroup
	}
	return nil
}

func (x *ProductTemplateAttribute) GetRule() *ProductAttributeRule {
	if x, ok := x.GetValue().(*ProductTemplateAttribute_Rule); ok {
		return x.Rule
	}
	return nil
}

type isProductTemplateAttribute_Value interface {
	isProductTemplateAttribute_Value()
}

type ProductTemplateAttribute_RuleGroup struct {
	RuleGroup *ProductAttributeRuleGroup `protobuf:"bytes,1,opt,name=rule_group,json=ruleGroup,proto3,oneof"`
}

type ProductTemplateAttribute_Rule struct {
	Rule *ProductAttributeRule `protobuf:"bytes,2,opt,name=rule,proto3,oneof"`
}

func (*ProductTemplateAttribute_RuleGroup) isProductTemplateAttribute_Value() {}

func (*ProductTemplateAttribute_Rule) isProductTemplateAttribute_Value() {}

type ProductAttributeRuleGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    *pb.VersionID           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductAttributeRules []*ProductAttributeRule `protobuf:"bytes,4,rep,name=product_attribute_rules,json=productAttributeRules,proto3" json:"product_attribute_rules,omitempty"`
}

func (x *ProductAttributeRuleGroup) Reset() {
	*x = ProductAttributeRuleGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeRuleGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeRuleGroup) ProtoMessage() {}

func (x *ProductAttributeRuleGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeRuleGroup.ProtoReflect.Descriptor instead.
func (*ProductAttributeRuleGroup) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{3}
}

func (x *ProductAttributeRuleGroup) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ProductAttributeRuleGroup) GetProductAttributeRules() []*ProductAttributeRule {
	if x != nil {
		return x.ProductAttributeRules
	}
	return nil
}

type AttributeLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locale      enums.Locale `protobuf:"varint,1,opt,name=locale,proto3,enum=google.retail.enums.locale.Locale" json:"locale,omitempty"`
	Name        string       `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Description string       `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AttributeLabel) Reset() {
	*x = AttributeLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeLabel) ProtoMessage() {}

func (x *AttributeLabel) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeLabel.ProtoReflect.Descriptor instead.
func (*AttributeLabel) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{4}
}

func (x *AttributeLabel) GetLocale() enums.Locale {
	if x != nil {
		return x.Locale
	}
	return enums.Locale(0)
}

func (x *AttributeLabel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttributeLabel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ProductAttributeRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ordinal         int32                     `protobuf:"varint,1,opt,name=ordinal,proto3" json:"ordinal,omitempty"`
	Type            ProductAttributeRule_Type `protobuf:"varint,2,opt,name=type,proto3,enum=google.retail.merchandise.pb.ProductAttributeRule_Type" json:"type,omitempty"`
	Required        bool                      `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	AllowOverride   bool                      `protobuf:"varint,4,opt,name=allow_override,json=allowOverride,proto3" json:"allow_override,omitempty"`
	ValidationRegEx string                    `protobuf:"bytes,5,opt,name=validation_reg_ex,json=validationRegEx,proto3" json:"validation_reg_ex,omitempty"`
	Labels          []*AttributeLabel         `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *ProductAttributeRule) Reset() {
	*x = ProductAttributeRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeRule) ProtoMessage() {}

func (x *ProductAttributeRule) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeRule.ProtoReflect.Descriptor instead.
func (*ProductAttributeRule) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{5}
}

func (x *ProductAttributeRule) GetOrdinal() int32 {
	if x != nil {
		return x.Ordinal
	}
	return 0
}

func (x *ProductAttributeRule) GetType() ProductAttributeRule_Type {
	if x != nil {
		return x.Type
	}
	return ProductAttributeRule_RATIONAL
}

func (x *ProductAttributeRule) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *ProductAttributeRule) GetAllowOverride() bool {
	if x != nil {
		return x.AllowOverride
	}
	return false
}

func (x *ProductAttributeRule) GetValidationRegEx() string {
	if x != nil {
		return x.ValidationRegEx
	}
	return ""
}

func (x *ProductAttributeRule) GetLabels() []*AttributeLabel {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ProductAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*ProductAttribute_AttributeGroup
	//	*ProductAttribute_Attribute
	Value isProductAttribute_Value `protobuf_oneof:"value"`
}

func (x *ProductAttribute) Reset() {
	*x = ProductAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttribute) ProtoMessage() {}

func (x *ProductAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttribute.ProtoReflect.Descriptor instead.
func (*ProductAttribute) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{6}
}

func (m *ProductAttribute) GetValue() isProductAttribute_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ProductAttribute) GetAttributeGroup() *ProductAttributeRuleGroupValue {
	if x, ok := x.GetValue().(*ProductAttribute_AttributeGroup); ok {
		return x.AttributeGroup
	}
	return nil
}

func (x *ProductAttribute) GetAttribute() *ProductAttributeRuleValue {
	if x, ok := x.GetValue().(*ProductAttribute_Attribute); ok {
		return x.Attribute
	}
	return nil
}

type isProductAttribute_Value interface {
	isProductAttribute_Value()
}

type ProductAttribute_AttributeGroup struct {
	AttributeGroup *ProductAttributeRuleGroupValue `protobuf:"bytes,1,opt,name=attribute_group,json=attributeGroup,proto3,oneof"`
}

type ProductAttribute_Attribute struct {
	Attribute *ProductAttributeRuleValue `protobuf:"bytes,2,opt,name=attribute,proto3,oneof"`
}

func (*ProductAttribute_AttributeGroup) isProductAttribute_Value() {}

func (*ProductAttribute_Attribute) isProductAttribute_Value() {}

type ProductAttributeRuleGroupValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleGroupId *pb.VersionID                `protobuf:"bytes,1,opt,name=rule_group_id,json=ruleGroupId,proto3" json:"rule_group_id,omitempty"`
	Values      []*ProductAttributeRuleValue `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ProductAttributeRuleGroupValue) Reset() {
	*x = ProductAttributeRuleGroupValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeRuleGroupValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeRuleGroupValue) ProtoMessage() {}

func (x *ProductAttributeRuleGroupValue) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeRuleGroupValue.ProtoReflect.Descriptor instead.
func (*ProductAttributeRuleGroupValue) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{7}
}

func (x *ProductAttributeRuleGroupValue) GetRuleGroupId() *pb.VersionID {
	if x != nil {
		return x.RuleGroupId
	}
	return nil
}

func (x *ProductAttributeRuleGroupValue) GetValues() []*ProductAttributeRuleValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type ProductAttributeRuleValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductTemplateId *pb.VersionID `protobuf:"bytes,1,opt,name=product_template_id,json=productTemplateId,proto3" json:"product_template_id,omitempty"`
	FieldOrdinal      int32         `protobuf:"varint,2,opt,name=field_ordinal,json=fieldOrdinal,proto3" json:"field_ordinal,omitempty"`
	// Types that are assignable to Value:
	//
	//	*ProductAttributeRuleValue_NumberValue
	//	*ProductAttributeRuleValue_StringValue
	Value isProductAttributeRuleValue_Value `protobuf_oneof:"value"`
}

func (x *ProductAttributeRuleValue) Reset() {
	*x = ProductAttributeRuleValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeRuleValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeRuleValue) ProtoMessage() {}

func (x *ProductAttributeRuleValue) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeRuleValue.ProtoReflect.Descriptor instead.
func (*ProductAttributeRuleValue) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{8}
}

func (x *ProductAttributeRuleValue) GetProductTemplateId() *pb.VersionID {
	if x != nil {
		return x.ProductTemplateId
	}
	return nil
}

func (x *ProductAttributeRuleValue) GetFieldOrdinal() int32 {
	if x != nil {
		return x.FieldOrdinal
	}
	return 0
}

func (m *ProductAttributeRuleValue) GetValue() isProductAttributeRuleValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ProductAttributeRuleValue) GetNumberValue() *ProductAttributeRuleValue_Number {
	if x, ok := x.GetValue().(*ProductAttributeRuleValue_NumberValue); ok {
		return x.NumberValue
	}
	return nil
}

func (x *ProductAttributeRuleValue) GetStringValue() *ProductAttributeRuleValue_String {
	if x, ok := x.GetValue().(*ProductAttributeRuleValue_StringValue); ok {
		return x.StringValue
	}
	return nil
}

type isProductAttributeRuleValue_Value interface {
	isProductAttributeRuleValue_Value()
}

type ProductAttributeRuleValue_NumberValue struct {
	NumberValue *ProductAttributeRuleValue_Number `protobuf:"bytes,3,opt,name=number_value,json=numberValue,proto3,oneof"`
}

type ProductAttributeRuleValue_StringValue struct {
	StringValue *ProductAttributeRuleValue_String `protobuf:"bytes,4,opt,name=string_value,json=stringValue,proto3,oneof"`
}

func (*ProductAttributeRuleValue_NumberValue) isProductAttributeRuleValue_Value() {}

func (*ProductAttributeRuleValue_StringValue) isProductAttributeRuleValue_Value() {}

type I18NProductHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locale           enums.Locale `protobuf:"varint,1,opt,name=locale,proto3,enum=google.retail.enums.locale.Locale" json:"locale,omitempty"`
	Brand            string       `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	Name             string       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ShortDescription string       `protobuf:"bytes,4,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	LongDescription  string       `protobuf:"bytes,5,opt,name=long_description,json=longDescription,proto3" json:"long_description,omitempty"`
	SearchTerms      []string     `protobuf:"bytes,6,rep,name=search_terms,json=searchTerms,proto3" json:"search_terms,omitempty"`
	Images           []*pb.Image  `protobuf:"bytes,7,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *I18NProductHeader) Reset() {
	*x = I18NProductHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *I18NProductHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*I18NProductHeader) ProtoMessage() {}

func (x *I18NProductHeader) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use I18NProductHeader.ProtoReflect.Descriptor instead.
func (*I18NProductHeader) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{9}
}

func (x *I18NProductHeader) GetLocale() enums.Locale {
	if x != nil {
		return x.Locale
	}
	return enums.Locale(0)
}

func (x *I18NProductHeader) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *I18NProductHeader) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *I18NProductHeader) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *I18NProductHeader) GetLongDescription() string {
	if x != nil {
		return x.LongDescription
	}
	return ""
}

func (x *I18NProductHeader) GetSearchTerms() []string {
	if x != nil {
		return x.SearchTerms
	}
	return nil
}

func (x *I18NProductHeader) GetImages() []*pb.Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                *pb.VersionID             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BusinessKeys      []*pb.BusinessKey         `protobuf:"bytes,2,rep,name=business_keys,json=businessKeys,proto3" json:"business_keys,omitempty"`
	BasePrice         *pb.Currency              `protobuf:"bytes,3,opt,name=base_price,json=basePrice,proto3" json:"base_price,omitempty"`
	TaxCode           *pb1.TaxCode              `protobuf:"bytes,4,opt,name=tax_code,json=taxCode,proto3" json:"tax_code,omitempty"`
	Hierarchy         *pb1.MerchandiseHierarchy `protobuf:"bytes,5,opt,name=hierarchy,proto3" json:"hierarchy,omitempty"`
	Detail            *Product_Detail           `protobuf:"bytes,6,opt,name=detail,proto3" json:"detail,omitempty"`
	Rating            float64                   `protobuf:"fixed64,7,opt,name=rating,proto3" json:"rating,omitempty"`
	Measurements      []*pb.NamedMeasure        `protobuf:"bytes,8,rep,name=measurements,proto3" json:"measurements,omitempty"`
	Variations        []*Product_Variant        `protobuf:"bytes,9,rep,name=variations,proto3" json:"variations,omitempty"`
	RelatedProductIds []*pb.VersionID           `protobuf:"bytes,30,rep,name=related_product_ids,json=relatedProductIds,proto3" json:"related_product_ids,omitempty"`
	Suppliers         []*Supplier               `protobuf:"bytes,99,rep,name=suppliers,proto3" json:"suppliers,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{10}
}

func (x *Product) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Product) GetBusinessKeys() []*pb.BusinessKey {
	if x != nil {
		return x.BusinessKeys
	}
	return nil
}

func (x *Product) GetBasePrice() *pb.Currency {
	if x != nil {
		return x.BasePrice
	}
	return nil
}

func (x *Product) GetTaxCode() *pb1.TaxCode {
	if x != nil {
		return x.TaxCode
	}
	return nil
}

func (x *Product) GetHierarchy() *pb1.MerchandiseHierarchy {
	if x != nil {
		return x.Hierarchy
	}
	return nil
}

func (x *Product) GetDetail() *Product_Detail {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *Product) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Product) GetMeasurements() []*pb.NamedMeasure {
	if x != nil {
		return x.Measurements
	}
	return nil
}

func (x *Product) GetVariations() []*Product_Variant {
	if x != nil {
		return x.Variations
	}
	return nil
}

func (x *Product) GetRelatedProductIds() []*pb.VersionID {
	if x != nil {
		return x.RelatedProductIds
	}
	return nil
}

func (x *Product) GetSuppliers() []*Supplier {
	if x != nil {
		return x.Suppliers
	}
	return nil
}

type ProductAttributeRuleValue_Number struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []float64 `protobuf:"fixed64,1,rep,packed,name=value,proto3" json:"value,omitempty"`
}

func (x *ProductAttributeRuleValue_Number) Reset() {
	*x = ProductAttributeRuleValue_Number{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeRuleValue_Number) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeRuleValue_Number) ProtoMessage() {}

func (x *ProductAttributeRuleValue_Number) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeRuleValue_Number.ProtoReflect.Descriptor instead.
func (*ProductAttributeRuleValue_Number) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ProductAttributeRuleValue_Number) GetValue() []float64 {
	if x != nil {
		return x.Value
	}
	return nil
}

type ProductAttributeRuleValue_String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *ProductAttributeRuleValue_String) Reset() {
	*x = ProductAttributeRuleValue_String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeRuleValue_String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeRuleValue_String) ProtoMessage() {}

func (x *ProductAttributeRuleValue_String) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeRuleValue_String.ProtoReflect.Descriptor instead.
func (*ProductAttributeRuleValue_String) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{8, 1}
}

func (x *ProductAttributeRuleValue_String) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

type Product_Detail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers    []*I18NProductHeader `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
	Attributes []*ProductAttribute  `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *Product_Detail) Reset() {
	*x = Product_Detail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product_Detail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product_Detail) ProtoMessage() {}

func (x *Product_Detail) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product_Detail.ProtoReflect.Descriptor instead.
func (*Product_Detail) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Product_Detail) GetHeaders() []*I18NProductHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Product_Detail) GetAttributes() []*ProductAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type Product_Variant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*Product_Detail `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *Product_Variant) Reset() {
	*x = Product_Variant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product_Variant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product_Variant) ProtoMessage() {}

func (x *Product_Variant) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product_Variant.ProtoReflect.Descriptor instead.
func (*Product_Variant) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{10, 1}
}

func (x *Product_Variant) GetDetails() []*Product_Detail {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_api_merchandise_model_proto protoreflect.FileDescriptor

var file_api_merchandise_model_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73,
	0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x1a, 0x16, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x16, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x71, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x08, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x32, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x3a, 0x19, 0xea, 0x3f, 0x16, 0x0a, 0x14, 0x74, 0x62, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0xc7, 0x01, 0x0a,
	0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x58, 0x0a, 0x0a, 0x72, 0x75, 0x6c,
	0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x48, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x42, 0x07, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x32, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x6a, 0x0a, 0x17, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x15, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x3a, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x06, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfd, 0x02, 0x0a, 0x14, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x4b, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x5f, 0x65,
	0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x45, 0x78, 0x12, 0x44, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x49,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x41, 0x4c, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x52, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x41, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49,
	0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x04, 0x22, 0xdd, 0x01, 0x0a, 0x10, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x67,
	0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64,
	0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x57, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x1e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75,
	0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x46, 0x0a, 0x0d,
	0x72, 0x75, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xa7, 0x03, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x52, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x63, 0x0a, 0x0c,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x63, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64,
	0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x1e, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x1e, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xac, 0x02, 0x0a, 0x11, 0x49, 0x31, 0x38, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x6c, 0x6f, 0x6e, 0x67,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x6e, 0x67, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65,
	0x72, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0xf9,
	0x07, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62,
	0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x49,
	0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x0c, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x40, 0x0a, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x74,
	0x61, 0x78, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x78, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x07, 0x74, 0x61, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4f, 0x0a, 0x09,
	0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63,
	0x68, 0x79, 0x52, 0x09, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x12, 0x44, 0x0a,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x49, 0x0a, 0x0c, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4d, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x13, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x1e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x11, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x44, 0x0a, 0x09, 0x73, 0x75, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x73, 0x18, 0x63, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x52, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x73, 0x1a,
	0xa3, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x49, 0x0a, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x31, 0x38, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x4e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x51, 0x0a, 0x07, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x12, 0x46, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x3a, 0x10, 0xea, 0x3f, 0x0d, 0x0a, 0x0b, 0x74,
	0x62, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x5e, 0x0a, 0x20, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x50, 0x01,
	0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x72, 0x6d,
	0x63, 0x67, 0x75, 0x69, 0x6e, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2d, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_merchandise_model_proto_rawDescOnce sync.Once
	file_api_merchandise_model_proto_rawDescData = file_api_merchandise_model_proto_rawDesc
)

func file_api_merchandise_model_proto_rawDescGZIP() []byte {
	file_api_merchandise_model_proto_rawDescOnce.Do(func() {
		file_api_merchandise_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_merchandise_model_proto_rawDescData)
	})
	return file_api_merchandise_model_proto_rawDescData
}

var file_api_merchandise_model_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_merchandise_model_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_merchandise_model_proto_goTypes = []interface{}{
	(ProductAttributeRule_Type)(0),           // 0: google.retail.merchandise.pb.ProductAttributeRule.Type
	(*Supplier)(nil),                         // 1: google.retail.merchandise.pb.Supplier
	(*ProductTemplate)(nil),                  // 2: google.retail.merchandise.pb.ProductTemplate
	(*ProductTemplateAttribute)(nil),         // 3: google.retail.merchandise.pb.ProductTemplateAttribute
	(*ProductAttributeRuleGroup)(nil),        // 4: google.retail.merchandise.pb.ProductAttributeRuleGroup
	(*AttributeLabel)(nil),                   // 5: google.retail.merchandise.pb.AttributeLabel
	(*ProductAttributeRule)(nil),             // 6: google.retail.merchandise.pb.ProductAttributeRule
	(*ProductAttribute)(nil),                 // 7: google.retail.merchandise.pb.ProductAttribute
	(*ProductAttributeRuleGroupValue)(nil),   // 8: google.retail.merchandise.pb.ProductAttributeRuleGroupValue
	(*ProductAttributeRuleValue)(nil),        // 9: google.retail.merchandise.pb.ProductAttributeRuleValue
	(*I18NProductHeader)(nil),                // 10: google.retail.merchandise.pb.I18nProductHeader
	(*Product)(nil),                          // 11: google.retail.merchandise.pb.Product
	(*ProductAttributeRuleValue_Number)(nil), // 12: google.retail.merchandise.pb.ProductAttributeRuleValue.Number
	(*ProductAttributeRuleValue_String)(nil), // 13: google.retail.merchandise.pb.ProductAttributeRuleValue.String
	(*Product_Detail)(nil),                   // 14: google.retail.merchandise.pb.Product.Detail
	(*Product_Variant)(nil),                  // 15: google.retail.merchandise.pb.Product.Variant
	(*pb.VersionID)(nil),                     // 16: google.retail.common.pb.VersionID
	(enums.Locale)(0),                        // 17: google.retail.enums.locale.Locale
	(*pb.Image)(nil),                         // 18: google.retail.common.pb.Image
	(*pb.BusinessKey)(nil),                   // 19: google.retail.common.pb.BusinessKey
	(*pb.Currency)(nil),                      // 20: google.retail.common.pb.Currency
	(*pb1.TaxCode)(nil),                      // 21: google.retail.enterprise.pb.TaxCode
	(*pb1.MerchandiseHierarchy)(nil),         // 22: google.retail.enterprise.pb.MerchandiseHierarchy
	(*pb.NamedMeasure)(nil),                  // 23: google.retail.common.pb.NamedMeasure
}
var file_api_merchandise_model_proto_depIdxs = []int32{
	16, // 0: google.retail.merchandise.pb.Supplier.id:type_name -> google.retail.common.pb.VersionID
	16, // 1: google.retail.merchandise.pb.ProductTemplate.id:type_name -> google.retail.common.pb.VersionID
	3,  // 2: google.retail.merchandise.pb.ProductTemplate.attributes:type_name -> google.retail.merchandise.pb.ProductTemplateAttribute
	4,  // 3: google.retail.merchandise.pb.ProductTemplateAttribute.rule_group:type_name -> google.retail.merchandise.pb.ProductAttributeRuleGroup
	6,  // 4: google.retail.merchandise.pb.ProductTemplateAttribute.rule:type_name -> google.retail.merchandise.pb.ProductAttributeRule
	16, // 5: google.retail.merchandise.pb.ProductAttributeRuleGroup.id:type_name -> google.retail.common.pb.VersionID
	6,  // 6: google.retail.merchandise.pb.ProductAttributeRuleGroup.product_attribute_rules:type_name -> google.retail.merchandise.pb.ProductAttributeRule
	17, // 7: google.retail.merchandise.pb.AttributeLabel.locale:type_name -> google.retail.enums.locale.Locale
	0,  // 8: google.retail.merchandise.pb.ProductAttributeRule.type:type_name -> google.retail.merchandise.pb.ProductAttributeRule.Type
	5,  // 9: google.retail.merchandise.pb.ProductAttributeRule.labels:type_name -> google.retail.merchandise.pb.AttributeLabel
	8,  // 10: google.retail.merchandise.pb.ProductAttribute.attribute_group:type_name -> google.retail.merchandise.pb.ProductAttributeRuleGroupValue
	9,  // 11: google.retail.merchandise.pb.ProductAttribute.attribute:type_name -> google.retail.merchandise.pb.ProductAttributeRuleValue
	16, // 12: google.retail.merchandise.pb.ProductAttributeRuleGroupValue.rule_group_id:type_name -> google.retail.common.pb.VersionID
	9,  // 13: google.retail.merchandise.pb.ProductAttributeRuleGroupValue.values:type_name -> google.retail.merchandise.pb.ProductAttributeRuleValue
	16, // 14: google.retail.merchandise.pb.ProductAttributeRuleValue.product_template_id:type_name -> google.retail.common.pb.VersionID
	12, // 15: google.retail.merchandise.pb.ProductAttributeRuleValue.number_value:type_name -> google.retail.merchandise.pb.ProductAttributeRuleValue.Number
	13, // 16: google.retail.merchandise.pb.ProductAttributeRuleValue.string_value:type_name -> google.retail.merchandise.pb.ProductAttributeRuleValue.String
	17, // 17: google.retail.merchandise.pb.I18nProductHeader.locale:type_name -> google.retail.enums.locale.Locale
	18, // 18: google.retail.merchandise.pb.I18nProductHeader.images:type_name -> google.retail.common.pb.Image
	16, // 19: google.retail.merchandise.pb.Product.id:type_name -> google.retail.common.pb.VersionID
	19, // 20: google.retail.merchandise.pb.Product.business_keys:type_name -> google.retail.common.pb.BusinessKey
	20, // 21: google.retail.merchandise.pb.Product.base_price:type_name -> google.retail.common.pb.Currency
	21, // 22: google.retail.merchandise.pb.Product.tax_code:type_name -> google.retail.enterprise.pb.TaxCode
	22, // 23: google.retail.merchandise.pb.Product.hierarchy:type_name -> google.retail.enterprise.pb.MerchandiseHierarchy
	14, // 24: google.retail.merchandise.pb.Product.detail:type_name -> google.retail.merchandise.pb.Product.Detail
	23, // 25: google.retail.merchandise.pb.Product.measurements:type_name -> google.retail.common.pb.NamedMeasure
	15, // 26: google.retail.merchandise.pb.Product.variations:type_name -> google.retail.merchandise.pb.Product.Variant
	16, // 27: google.retail.merchandise.pb.Product.related_product_ids:type_name -> google.retail.common.pb.VersionID
	1,  // 28: google.retail.merchandise.pb.Product.suppliers:type_name -> google.retail.merchandise.pb.Supplier
	10, // 29: google.retail.merchandise.pb.Product.Detail.headers:type_name -> google.retail.merchandise.pb.I18nProductHeader
	7,  // 30: google.retail.merchandise.pb.Product.Detail.attributes:type_name -> google.retail.merchandise.pb.ProductAttribute
	14, // 31: google.retail.merchandise.pb.Product.Variant.details:type_name -> google.retail.merchandise.pb.Product.Detail
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_api_merchandise_model_proto_init() }
func file_api_merchandise_model_proto_init() {
	if File_api_merchandise_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_merchandise_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Supplier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductTemplateAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeRuleGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeRuleGroupValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeRuleValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*I18NProductHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeRuleValue_Number); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeRuleValue_String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product_Detail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product_Variant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_merchandise_model_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ProductTemplateAttribute_RuleGroup)(nil),
		(*ProductTemplateAttribute_Rule)(nil),
	}
	file_api_merchandise_model_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ProductAttribute_AttributeGroup)(nil),
		(*ProductAttribute_Attribute)(nil),
	}
	file_api_merchandise_model_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ProductAttributeRuleValue_NumberValue)(nil),
		(*ProductAttributeRuleValue_StringValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_merchandise_model_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_merchandise_model_proto_goTypes,
		DependencyIndexes: file_api_merchandise_model_proto_depIdxs,
		EnumInfos:         file_api_merchandise_model_proto_enumTypes,
		MessageInfos:      file_api_merchandise_model_proto_msgTypes,
	}.Build()
	File_api_merchandise_model_proto = out.File
	file_api_merchandise_model_proto_rawDesc = nil
	file_api_merchandise_model_proto_goTypes = nil
	file_api_merchandise_model_proto_depIdxs = nil
}
