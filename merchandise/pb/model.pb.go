// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.10
// source: api/merchandise/model.proto

package pb

import (
	_ "github.com/GoogleCloudPlatform/protoc-gen-bq-schema/protos"
	pb "github.com/GoogleCloudPlatform/retail-data-model/common/pb"
	pb1 "github.com/GoogleCloudPlatform/retail-data-model/enterprise/pb"
	enums "github.com/GoogleCloudPlatform/retail-data-model/enums"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductTemplateAttributeRule_FieldType int32

const (
	ProductTemplateAttributeRule_RATIONAL   ProductTemplateAttributeRule_FieldType = 0
	ProductTemplateAttributeRule_IRRATIONAL ProductTemplateAttributeRule_FieldType = 1
	ProductTemplateAttributeRule_STRING     ProductTemplateAttributeRule_FieldType = 2
	ProductTemplateAttributeRule_DATE       ProductTemplateAttributeRule_FieldType = 3
	ProductTemplateAttributeRule_TIMESTAMP  ProductTemplateAttributeRule_FieldType = 4
)

// Enum value maps for ProductTemplateAttributeRule_FieldType.
var (
	ProductTemplateAttributeRule_FieldType_name = map[int32]string{
		0: "RATIONAL",
		1: "IRRATIONAL",
		2: "STRING",
		3: "DATE",
		4: "TIMESTAMP",
	}
	ProductTemplateAttributeRule_FieldType_value = map[string]int32{
		"RATIONAL":   0,
		"IRRATIONAL": 1,
		"STRING":     2,
		"DATE":       3,
		"TIMESTAMP":  4,
	}
)

func (x ProductTemplateAttributeRule_FieldType) Enum() *ProductTemplateAttributeRule_FieldType {
	p := new(ProductTemplateAttributeRule_FieldType)
	*p = x
	return p
}

func (x ProductTemplateAttributeRule_FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductTemplateAttributeRule_FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_merchandise_model_proto_enumTypes[0].Descriptor()
}

func (ProductTemplateAttributeRule_FieldType) Type() protoreflect.EnumType {
	return &file_api_merchandise_model_proto_enumTypes[0]
}

func (x ProductTemplateAttributeRule_FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductTemplateAttributeRule_FieldType.Descriptor instead.
func (ProductTemplateAttributeRule_FieldType) EnumDescriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{4, 0}
}

type Supplier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                *pb.VersionID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GeneralLedgerCode string        `protobuf:"bytes,2,opt,name=general_ledger_code,json=generalLedgerCode,proto3" json:"general_ledger_code,omitempty"`
}

func (x *Supplier) Reset() {
	*x = Supplier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Supplier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Supplier) ProtoMessage() {}

func (x *Supplier) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Supplier.ProtoReflect.Descriptor instead.
func (*Supplier) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{0}
}

func (x *Supplier) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Supplier) GetGeneralLedgerCode() string {
	if x != nil {
		return x.GeneralLedgerCode
	}
	return ""
}

type ProductTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *pb.VersionID               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Locale      enums.Locale                `protobuf:"varint,2,opt,name=locale,proto3,enum=google.retail.enums.locale.Locale" json:"locale,omitempty"`
	Name        string                      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                      `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Attributes  []*ProductTemplateAttribute `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty"`
	CategoryIds []string                    `protobuf:"bytes,7,rep,name=category_ids,proto3" json:"category_ids,omitempty"`
}

func (x *ProductTemplate) Reset() {
	*x = ProductTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductTemplate) ProtoMessage() {}

func (x *ProductTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductTemplate.ProtoReflect.Descriptor instead.
func (*ProductTemplate) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{1}
}

func (x *ProductTemplate) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ProductTemplate) GetLocale() enums.Locale {
	if x != nil {
		return x.Locale
	}
	return enums.Locale(0)
}

func (x *ProductTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductTemplate) GetAttributes() []*ProductTemplateAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ProductTemplate) GetCategoryIds() []string {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

type ProductTemplateAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *pb.VersionID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Locale      enums.Locale  `protobuf:"varint,2,opt,name=locale,proto3,enum=google.retail.enums.locale.Locale" json:"locale,omitempty"`
	Name        string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string        `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Ordinal     int32         `protobuf:"varint,5,opt,name=ordinal,proto3" json:"ordinal,omitempty"`
	// Types that are assignable to Value:
	//
	//	*ProductTemplateAttribute_RuleGroup
	//	*ProductTemplateAttribute_Rule
	Value isProductTemplateAttribute_Value `protobuf_oneof:"value"`
}

func (x *ProductTemplateAttribute) Reset() {
	*x = ProductTemplateAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductTemplateAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductTemplateAttribute) ProtoMessage() {}

func (x *ProductTemplateAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductTemplateAttribute.ProtoReflect.Descriptor instead.
func (*ProductTemplateAttribute) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{2}
}

func (x *ProductTemplateAttribute) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ProductTemplateAttribute) GetLocale() enums.Locale {
	if x != nil {
		return x.Locale
	}
	return enums.Locale(0)
}

func (x *ProductTemplateAttribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductTemplateAttribute) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductTemplateAttribute) GetOrdinal() int32 {
	if x != nil {
		return x.Ordinal
	}
	return 0
}

func (m *ProductTemplateAttribute) GetValue() isProductTemplateAttribute_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ProductTemplateAttribute) GetRuleGroup() *ProductTemplateAttributeRuleGroup {
	if x, ok := x.GetValue().(*ProductTemplateAttribute_RuleGroup); ok {
		return x.RuleGroup
	}
	return nil
}

func (x *ProductTemplateAttribute) GetRule() *ProductTemplateAttributeRule {
	if x, ok := x.GetValue().(*ProductTemplateAttribute_Rule); ok {
		return x.Rule
	}
	return nil
}

type isProductTemplateAttribute_Value interface {
	isProductTemplateAttribute_Value()
}

type ProductTemplateAttribute_RuleGroup struct {
	RuleGroup *ProductTemplateAttributeRuleGroup `protobuf:"bytes,6,opt,name=rule_group,proto3,oneof"`
}

type ProductTemplateAttribute_Rule struct {
	Rule *ProductTemplateAttributeRule `protobuf:"bytes,7,opt,name=rule,proto3,oneof"`
}

func (*ProductTemplateAttribute_RuleGroup) isProductTemplateAttribute_Value() {}

func (*ProductTemplateAttribute_Rule) isProductTemplateAttribute_Value() {}

type ProductTemplateAttributeRuleGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductTemplateAttributeRules []*ProductTemplateAttributeRule `protobuf:"bytes,1,rep,name=product_template_attribute_rules,proto3" json:"product_template_attribute_rules,omitempty"`
}

func (x *ProductTemplateAttributeRuleGroup) Reset() {
	*x = ProductTemplateAttributeRuleGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductTemplateAttributeRuleGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductTemplateAttributeRuleGroup) ProtoMessage() {}

func (x *ProductTemplateAttributeRuleGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductTemplateAttributeRuleGroup.ProtoReflect.Descriptor instead.
func (*ProductTemplateAttributeRuleGroup) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{3}
}

func (x *ProductTemplateAttributeRuleGroup) GetProductTemplateAttributeRules() []*ProductTemplateAttributeRule {
	if x != nil {
		return x.ProductTemplateAttributeRules
	}
	return nil
}

type ProductTemplateAttributeRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ordinal         int32                                  `protobuf:"varint,4,opt,name=ordinal,proto3" json:"ordinal,omitempty"`
	FieldType       ProductTemplateAttributeRule_FieldType `protobuf:"varint,5,opt,name=field_type,proto3,enum=google.retail.merchandise.pb.ProductTemplateAttributeRule_FieldType" json:"field_type,omitempty"`
	Required        bool                                   `protobuf:"varint,6,opt,name=required,proto3" json:"required,omitempty"`
	AllowOverride   bool                                   `protobuf:"varint,7,opt,name=allow_override,proto3" json:"allow_override,omitempty"`
	ValidationRegex string                                 `protobuf:"bytes,8,opt,name=validation_regex,proto3" json:"validation_regex,omitempty"`
}

func (x *ProductTemplateAttributeRule) Reset() {
	*x = ProductTemplateAttributeRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductTemplateAttributeRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductTemplateAttributeRule) ProtoMessage() {}

func (x *ProductTemplateAttributeRule) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductTemplateAttributeRule.ProtoReflect.Descriptor instead.
func (*ProductTemplateAttributeRule) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{4}
}

func (x *ProductTemplateAttributeRule) GetOrdinal() int32 {
	if x != nil {
		return x.Ordinal
	}
	return 0
}

func (x *ProductTemplateAttributeRule) GetFieldType() ProductTemplateAttributeRule_FieldType {
	if x != nil {
		return x.FieldType
	}
	return ProductTemplateAttributeRule_RATIONAL
}

func (x *ProductTemplateAttributeRule) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *ProductTemplateAttributeRule) GetAllowOverride() bool {
	if x != nil {
		return x.AllowOverride
	}
	return false
}

func (x *ProductTemplateAttributeRule) GetValidationRegex() string {
	if x != nil {
		return x.ValidationRegex
	}
	return ""
}

type ProductAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locale enums.Locale `protobuf:"varint,1,opt,name=locale,proto3,enum=google.retail.enums.locale.Locale" json:"locale,omitempty"`
	// Types that are assignable to Value:
	//
	//	*ProductAttribute_AttributeGroup
	//	*ProductAttribute_Attribute
	Value isProductAttribute_Value `protobuf_oneof:"value"`
}

func (x *ProductAttribute) Reset() {
	*x = ProductAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttribute) ProtoMessage() {}

func (x *ProductAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttribute.ProtoReflect.Descriptor instead.
func (*ProductAttribute) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{5}
}

func (x *ProductAttribute) GetLocale() enums.Locale {
	if x != nil {
		return x.Locale
	}
	return enums.Locale(0)
}

func (m *ProductAttribute) GetValue() isProductAttribute_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ProductAttribute) GetAttributeGroup() *ProductAttributeRuleGroupValue {
	if x, ok := x.GetValue().(*ProductAttribute_AttributeGroup); ok {
		return x.AttributeGroup
	}
	return nil
}

func (x *ProductAttribute) GetAttribute() *ProductAttributeRuleValue {
	if x, ok := x.GetValue().(*ProductAttribute_Attribute); ok {
		return x.Attribute
	}
	return nil
}

type isProductAttribute_Value interface {
	isProductAttribute_Value()
}

type ProductAttribute_AttributeGroup struct {
	AttributeGroup *ProductAttributeRuleGroupValue `protobuf:"bytes,2,opt,name=attribute_group,proto3,oneof"`
}

type ProductAttribute_Attribute struct {
	Attribute *ProductAttributeRuleValue `protobuf:"bytes,3,opt,name=attribute,proto3,oneof"`
}

func (*ProductAttribute_AttributeGroup) isProductAttribute_Value() {}

func (*ProductAttribute_Attribute) isProductAttribute_Value() {}

type ProductAttributeRuleGroupValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductAttributeRuleGroupId string                       `protobuf:"bytes,1,opt,name=product_attribute_rule_group_id,proto3" json:"product_attribute_rule_group_id,omitempty"`
	Values                      []*ProductAttributeRuleValue `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ProductAttributeRuleGroupValue) Reset() {
	*x = ProductAttributeRuleGroupValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeRuleGroupValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeRuleGroupValue) ProtoMessage() {}

func (x *ProductAttributeRuleGroupValue) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeRuleGroupValue.ProtoReflect.Descriptor instead.
func (*ProductAttributeRuleGroupValue) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{6}
}

func (x *ProductAttributeRuleGroupValue) GetProductAttributeRuleGroupId() string {
	if x != nil {
		return x.ProductAttributeRuleGroupId
	}
	return ""
}

func (x *ProductAttributeRuleGroupValue) GetValues() []*ProductAttributeRuleValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type ProductAttributeRuleValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductTemplateAttributeRuleId string `protobuf:"bytes,1,opt,name=product_template_attribute_rule_id,proto3" json:"product_template_attribute_rule_id,omitempty"`
	FieldOrdinal                   int32  `protobuf:"varint,2,opt,name=field_ordinal,proto3" json:"field_ordinal,omitempty"`
	// Types that are assignable to Value:
	//
	//	*ProductAttributeRuleValue_NumberValue
	//	*ProductAttributeRuleValue_StringValue
	Value isProductAttributeRuleValue_Value `protobuf_oneof:"value"`
}

func (x *ProductAttributeRuleValue) Reset() {
	*x = ProductAttributeRuleValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeRuleValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeRuleValue) ProtoMessage() {}

func (x *ProductAttributeRuleValue) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeRuleValue.ProtoReflect.Descriptor instead.
func (*ProductAttributeRuleValue) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{7}
}

func (x *ProductAttributeRuleValue) GetProductTemplateAttributeRuleId() string {
	if x != nil {
		return x.ProductTemplateAttributeRuleId
	}
	return ""
}

func (x *ProductAttributeRuleValue) GetFieldOrdinal() int32 {
	if x != nil {
		return x.FieldOrdinal
	}
	return 0
}

func (m *ProductAttributeRuleValue) GetValue() isProductAttributeRuleValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ProductAttributeRuleValue) GetNumberValue() *ProductAttributeRuleValue_Number {
	if x, ok := x.GetValue().(*ProductAttributeRuleValue_NumberValue); ok {
		return x.NumberValue
	}
	return nil
}

func (x *ProductAttributeRuleValue) GetStringValue() *ProductAttributeRuleValue_String {
	if x, ok := x.GetValue().(*ProductAttributeRuleValue_StringValue); ok {
		return x.StringValue
	}
	return nil
}

type isProductAttributeRuleValue_Value interface {
	isProductAttributeRuleValue_Value()
}

type ProductAttributeRuleValue_NumberValue struct {
	NumberValue *ProductAttributeRuleValue_Number `protobuf:"bytes,3,opt,name=number_value,proto3,oneof"`
}

type ProductAttributeRuleValue_StringValue struct {
	StringValue *ProductAttributeRuleValue_String `protobuf:"bytes,4,opt,name=string_value,proto3,oneof"`
}

func (*ProductAttributeRuleValue_NumberValue) isProductAttributeRuleValue_Value() {}

func (*ProductAttributeRuleValue_StringValue) isProductAttributeRuleValue_Value() {}

type I18NProductHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locale           enums.Locale `protobuf:"varint,1,opt,name=locale,proto3,enum=google.retail.enums.locale.Locale" json:"locale,omitempty"`
	Brand            string       `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	Name             string       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ShortDescription string       `protobuf:"bytes,4,opt,name=short_description,proto3" json:"short_description,omitempty"`
	LongDescription  string       `protobuf:"bytes,5,opt,name=long_description,proto3" json:"long_description,omitempty"`
	SearchTerms      []string     `protobuf:"bytes,6,rep,name=search_terms,proto3" json:"search_terms,omitempty"`
	Images           []*pb.Image  `protobuf:"bytes,7,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *I18NProductHeader) Reset() {
	*x = I18NProductHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *I18NProductHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*I18NProductHeader) ProtoMessage() {}

func (x *I18NProductHeader) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use I18NProductHeader.ProtoReflect.Descriptor instead.
func (*I18NProductHeader) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{8}
}

func (x *I18NProductHeader) GetLocale() enums.Locale {
	if x != nil {
		return x.Locale
	}
	return enums.Locale(0)
}

func (x *I18NProductHeader) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *I18NProductHeader) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *I18NProductHeader) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *I18NProductHeader) GetLongDescription() string {
	if x != nil {
		return x.LongDescription
	}
	return ""
}

func (x *I18NProductHeader) GetSearchTerms() []string {
	if x != nil {
		return x.SearchTerms
	}
	return nil
}

func (x *I18NProductHeader) GetImages() []*pb.Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                *pb.VersionID               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BusinessKeys      []*pb.BusinessKey           `protobuf:"bytes,2,rep,name=business_keys,proto3" json:"business_keys,omitempty"`
	ProductTemplateId string                      `protobuf:"bytes,11,opt,name=product_template_id,proto3" json:"product_template_id,omitempty"`
	Headers           []*I18NProductHeader        `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty"`
	Attributes        []*ProductAttribute         `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	BasePrice         *pb.Currency                `protobuf:"bytes,5,opt,name=base_price,proto3" json:"base_price,omitempty"`
	TaxCode           *pb1.TaxCode                `protobuf:"bytes,6,opt,name=tax_code,proto3" json:"tax_code,omitempty"`
	Hierarchy         []*pb1.MerchandiseHierarchy `protobuf:"bytes,7,rep,name=hierarchy,proto3" json:"hierarchy,omitempty"`
	Rating            float64                     `protobuf:"fixed64,8,opt,name=rating,proto3" json:"rating,omitempty"`
	Measurements      []*pb.NamedMeasure          `protobuf:"bytes,9,rep,name=measurements,proto3" json:"measurements,omitempty"`
	Variations        []*pb.VersionID             `protobuf:"bytes,10,rep,name=variations,proto3" json:"variations,omitempty"`
	Substitutions     []*pb.VersionID             `protobuf:"bytes,20,rep,name=substitutions,proto3" json:"substitutions,omitempty"`
	RelatedProducts   []*pb.VersionID             `protobuf:"bytes,30,rep,name=related_products,proto3" json:"related_products,omitempty"`
	Suppliers         []*Supplier                 `protobuf:"bytes,50,rep,name=suppliers,proto3" json:"suppliers,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{9}
}

func (x *Product) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Product) GetBusinessKeys() []*pb.BusinessKey {
	if x != nil {
		return x.BusinessKeys
	}
	return nil
}

func (x *Product) GetProductTemplateId() string {
	if x != nil {
		return x.ProductTemplateId
	}
	return ""
}

func (x *Product) GetHeaders() []*I18NProductHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Product) GetAttributes() []*ProductAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Product) GetBasePrice() *pb.Currency {
	if x != nil {
		return x.BasePrice
	}
	return nil
}

func (x *Product) GetTaxCode() *pb1.TaxCode {
	if x != nil {
		return x.TaxCode
	}
	return nil
}

func (x *Product) GetHierarchy() []*pb1.MerchandiseHierarchy {
	if x != nil {
		return x.Hierarchy
	}
	return nil
}

func (x *Product) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Product) GetMeasurements() []*pb.NamedMeasure {
	if x != nil {
		return x.Measurements
	}
	return nil
}

func (x *Product) GetVariations() []*pb.VersionID {
	if x != nil {
		return x.Variations
	}
	return nil
}

func (x *Product) GetSubstitutions() []*pb.VersionID {
	if x != nil {
		return x.Substitutions
	}
	return nil
}

func (x *Product) GetRelatedProducts() []*pb.VersionID {
	if x != nil {
		return x.RelatedProducts
	}
	return nil
}

func (x *Product) GetSuppliers() []*Supplier {
	if x != nil {
		return x.Suppliers
	}
	return nil
}

type ProductAttributeRuleValue_Number struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []float64 `protobuf:"fixed64,1,rep,packed,name=value,proto3" json:"value,omitempty"`
}

func (x *ProductAttributeRuleValue_Number) Reset() {
	*x = ProductAttributeRuleValue_Number{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeRuleValue_Number) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeRuleValue_Number) ProtoMessage() {}

func (x *ProductAttributeRuleValue_Number) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeRuleValue_Number.ProtoReflect.Descriptor instead.
func (*ProductAttributeRuleValue_Number) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ProductAttributeRuleValue_Number) GetValue() []float64 {
	if x != nil {
		return x.Value
	}
	return nil
}

type ProductAttributeRuleValue_String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *ProductAttributeRuleValue_String) Reset() {
	*x = ProductAttributeRuleValue_String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_merchandise_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeRuleValue_String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeRuleValue_String) ProtoMessage() {}

func (x *ProductAttributeRuleValue_String) ProtoReflect() protoreflect.Message {
	mi := &file_api_merchandise_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeRuleValue_String.ProtoReflect.Descriptor instead.
func (*ProductAttributeRuleValue_String) Descriptor() ([]byte, []int) {
	return file_api_merchandise_model_proto_rawDescGZIP(), []int{7, 1}
}

func (x *ProductAttributeRuleValue_String) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_api_merchandise_model_proto protoreflect.FileDescriptor

var file_api_merchandise_model_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73,
	0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x1a, 0x16, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x16, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x71, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x08, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xce, 0x02, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x32, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x73, 0x3a, 0x19, 0xea, 0x3f, 0x16, 0x0a, 0x14, 0x74, 0x62, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x98, 0x03, 0x0a,
	0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a,
	0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x65, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x61, 0x0a, 0x0a, 0x72, 0x75, 0x6c,
	0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00,
	0x52, 0x0a, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x50, 0x0a, 0x04,
	0x72, 0x75, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x42, 0x07,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x21, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x86, 0x01,
	0x0a, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xde, 0x02, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x6c, 0x12, 0x64, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73,
	0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x22, 0x4e, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x52, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x08,
	0x0a, 0x04, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45,
	0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x04, 0x22, 0x9a, 0x02, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x06,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x68, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48,
	0x00, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x57, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73,
	0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x48, 0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x12, 0x4f, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0xa6, 0x03, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x4e, 0x0a, 0x22, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x72,
	0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x22, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x64, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0c,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x64, 0x0a, 0x0c,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0x1e, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0x1e, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xaf, 0x02, 0x0a, 0x11,
	0x49, 0x31, 0x38, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x3a, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x72, 0x6d,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x74, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0xc5, 0x07,
	0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4a, 0x0a,
	0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x0d, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x31, 0x38, 0x6e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x4e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0a, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x74, 0x61, 0x78,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x08, 0x74, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x4f, 0x0a, 0x09, 0x68,
	0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68,
	0x79, 0x52, 0x09, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x49, 0x0a, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x52, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x42, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x48, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x0d,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4e, 0x0a,
	0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x10, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x44, 0x0a,
	0x09, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x73, 0x18, 0x32, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x52, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x72, 0x73, 0x3a, 0x10, 0xea, 0x3f, 0x0d, 0x0a, 0x0b, 0x74, 0x62, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x65, 0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x72, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_merchandise_model_proto_rawDescOnce sync.Once
	file_api_merchandise_model_proto_rawDescData = file_api_merchandise_model_proto_rawDesc
)

func file_api_merchandise_model_proto_rawDescGZIP() []byte {
	file_api_merchandise_model_proto_rawDescOnce.Do(func() {
		file_api_merchandise_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_merchandise_model_proto_rawDescData)
	})
	return file_api_merchandise_model_proto_rawDescData
}

var file_api_merchandise_model_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_merchandise_model_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_merchandise_model_proto_goTypes = []interface{}{
	(ProductTemplateAttributeRule_FieldType)(0), // 0: google.retail.merchandise.pb.ProductTemplateAttributeRule.FieldType
	(*Supplier)(nil),                          // 1: google.retail.merchandise.pb.Supplier
	(*ProductTemplate)(nil),                   // 2: google.retail.merchandise.pb.ProductTemplate
	(*ProductTemplateAttribute)(nil),          // 3: google.retail.merchandise.pb.ProductTemplateAttribute
	(*ProductTemplateAttributeRuleGroup)(nil), // 4: google.retail.merchandise.pb.ProductTemplateAttributeRuleGroup
	(*ProductTemplateAttributeRule)(nil),      // 5: google.retail.merchandise.pb.ProductTemplateAttributeRule
	(*ProductAttribute)(nil),                  // 6: google.retail.merchandise.pb.ProductAttribute
	(*ProductAttributeRuleGroupValue)(nil),    // 7: google.retail.merchandise.pb.ProductAttributeRuleGroupValue
	(*ProductAttributeRuleValue)(nil),         // 8: google.retail.merchandise.pb.ProductAttributeRuleValue
	(*I18NProductHeader)(nil),                 // 9: google.retail.merchandise.pb.I18nProductHeader
	(*Product)(nil),                           // 10: google.retail.merchandise.pb.Product
	(*ProductAttributeRuleValue_Number)(nil),  // 11: google.retail.merchandise.pb.ProductAttributeRuleValue.Number
	(*ProductAttributeRuleValue_String)(nil),  // 12: google.retail.merchandise.pb.ProductAttributeRuleValue.String
	(*pb.VersionID)(nil),                      // 13: google.retail.common.pb.VersionID
	(enums.Locale)(0),                         // 14: google.retail.enums.locale.Locale
	(*pb.Image)(nil),                          // 15: google.retail.common.pb.Image
	(*pb.BusinessKey)(nil),                    // 16: google.retail.common.pb.BusinessKey
	(*pb.Currency)(nil),                       // 17: google.retail.common.pb.Currency
	(*pb1.TaxCode)(nil),                       // 18: google.retail.enterprise.pb.TaxCode
	(*pb1.MerchandiseHierarchy)(nil),          // 19: google.retail.enterprise.pb.MerchandiseHierarchy
	(*pb.NamedMeasure)(nil),                   // 20: google.retail.common.pb.NamedMeasure
}
var file_api_merchandise_model_proto_depIdxs = []int32{
	13, // 0: google.retail.merchandise.pb.Supplier.id:type_name -> google.retail.common.pb.VersionID
	13, // 1: google.retail.merchandise.pb.ProductTemplate.id:type_name -> google.retail.common.pb.VersionID
	14, // 2: google.retail.merchandise.pb.ProductTemplate.locale:type_name -> google.retail.enums.locale.Locale
	3,  // 3: google.retail.merchandise.pb.ProductTemplate.attributes:type_name -> google.retail.merchandise.pb.ProductTemplateAttribute
	13, // 4: google.retail.merchandise.pb.ProductTemplateAttribute.id:type_name -> google.retail.common.pb.VersionID
	14, // 5: google.retail.merchandise.pb.ProductTemplateAttribute.locale:type_name -> google.retail.enums.locale.Locale
	4,  // 6: google.retail.merchandise.pb.ProductTemplateAttribute.rule_group:type_name -> google.retail.merchandise.pb.ProductTemplateAttributeRuleGroup
	5,  // 7: google.retail.merchandise.pb.ProductTemplateAttribute.rule:type_name -> google.retail.merchandise.pb.ProductTemplateAttributeRule
	5,  // 8: google.retail.merchandise.pb.ProductTemplateAttributeRuleGroup.product_template_attribute_rules:type_name -> google.retail.merchandise.pb.ProductTemplateAttributeRule
	0,  // 9: google.retail.merchandise.pb.ProductTemplateAttributeRule.field_type:type_name -> google.retail.merchandise.pb.ProductTemplateAttributeRule.FieldType
	14, // 10: google.retail.merchandise.pb.ProductAttribute.locale:type_name -> google.retail.enums.locale.Locale
	7,  // 11: google.retail.merchandise.pb.ProductAttribute.attribute_group:type_name -> google.retail.merchandise.pb.ProductAttributeRuleGroupValue
	8,  // 12: google.retail.merchandise.pb.ProductAttribute.attribute:type_name -> google.retail.merchandise.pb.ProductAttributeRuleValue
	8,  // 13: google.retail.merchandise.pb.ProductAttributeRuleGroupValue.values:type_name -> google.retail.merchandise.pb.ProductAttributeRuleValue
	11, // 14: google.retail.merchandise.pb.ProductAttributeRuleValue.number_value:type_name -> google.retail.merchandise.pb.ProductAttributeRuleValue.Number
	12, // 15: google.retail.merchandise.pb.ProductAttributeRuleValue.string_value:type_name -> google.retail.merchandise.pb.ProductAttributeRuleValue.String
	14, // 16: google.retail.merchandise.pb.I18nProductHeader.locale:type_name -> google.retail.enums.locale.Locale
	15, // 17: google.retail.merchandise.pb.I18nProductHeader.images:type_name -> google.retail.common.pb.Image
	13, // 18: google.retail.merchandise.pb.Product.id:type_name -> google.retail.common.pb.VersionID
	16, // 19: google.retail.merchandise.pb.Product.business_keys:type_name -> google.retail.common.pb.BusinessKey
	9,  // 20: google.retail.merchandise.pb.Product.headers:type_name -> google.retail.merchandise.pb.I18nProductHeader
	6,  // 21: google.retail.merchandise.pb.Product.attributes:type_name -> google.retail.merchandise.pb.ProductAttribute
	17, // 22: google.retail.merchandise.pb.Product.base_price:type_name -> google.retail.common.pb.Currency
	18, // 23: google.retail.merchandise.pb.Product.tax_code:type_name -> google.retail.enterprise.pb.TaxCode
	19, // 24: google.retail.merchandise.pb.Product.hierarchy:type_name -> google.retail.enterprise.pb.MerchandiseHierarchy
	20, // 25: google.retail.merchandise.pb.Product.measurements:type_name -> google.retail.common.pb.NamedMeasure
	13, // 26: google.retail.merchandise.pb.Product.variations:type_name -> google.retail.common.pb.VersionID
	13, // 27: google.retail.merchandise.pb.Product.substitutions:type_name -> google.retail.common.pb.VersionID
	13, // 28: google.retail.merchandise.pb.Product.related_products:type_name -> google.retail.common.pb.VersionID
	1,  // 29: google.retail.merchandise.pb.Product.suppliers:type_name -> google.retail.merchandise.pb.Supplier
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_api_merchandise_model_proto_init() }
func file_api_merchandise_model_proto_init() {
	if File_api_merchandise_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_merchandise_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Supplier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductTemplateAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductTemplateAttributeRuleGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductTemplateAttributeRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeRuleGroupValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeRuleValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*I18NProductHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeRuleValue_Number); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_merchandise_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeRuleValue_String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_merchandise_model_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ProductTemplateAttribute_RuleGroup)(nil),
		(*ProductTemplateAttribute_Rule)(nil),
	}
	file_api_merchandise_model_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ProductAttribute_AttributeGroup)(nil),
		(*ProductAttribute_Attribute)(nil),
	}
	file_api_merchandise_model_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*ProductAttributeRuleValue_NumberValue)(nil),
		(*ProductAttributeRuleValue_StringValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_merchandise_model_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_merchandise_model_proto_goTypes,
		DependencyIndexes: file_api_merchandise_model_proto_depIdxs,
		EnumInfos:         file_api_merchandise_model_proto_enumTypes,
		MessageInfos:      file_api_merchandise_model_proto_msgTypes,
	}.Build()
	File_api_merchandise_model_proto = out.File
	file_api_merchandise_model_proto_rawDesc = nil
	file_api_merchandise_model_proto_goTypes = nil
	file_api_merchandise_model_proto_depIdxs = nil
}
