// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.10
// source: api/enterprise/model.proto

package pb

import (
	_ "github.com/GoogleCloudPlatform/protoc-gen-bq-schema/protos"
	pb "github.com/GoogleCloudPlatform/retail-data-model/common/pb"
	enums "github.com/GoogleCloudPlatform/retail-data-model/enums"
	pb1 "github.com/GoogleCloudPlatform/retail-data-model/party/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BusinessUnitGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *pb.VersionID    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PrimaryLanguage    enums.Language   `protobuf:"varint,2,opt,name=primary_language,proto3,enum=google.retail.enums.lang.Language" json:"primary_language,omitempty"`
	SupportedLanguages []enums.Language `protobuf:"varint,3,rep,packed,name=supported_languages,json=languages,proto3,enum=google.retail.enums.lang.Language" json:"supported_languages,omitempty"`
	BusinessUnitIds    []string         `protobuf:"bytes,4,rep,name=business_unit_ids,proto3" json:"business_unit_ids,omitempty"`
}

func (x *BusinessUnitGroup) Reset() {
	*x = BusinessUnitGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_enterprise_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessUnitGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessUnitGroup) ProtoMessage() {}

func (x *BusinessUnitGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_enterprise_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessUnitGroup.ProtoReflect.Descriptor instead.
func (*BusinessUnitGroup) Descriptor() ([]byte, []int) {
	return file_api_enterprise_model_proto_rawDescGZIP(), []int{0}
}

func (x *BusinessUnitGroup) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BusinessUnitGroup) GetPrimaryLanguage() enums.Language {
	if x != nil {
		return x.PrimaryLanguage
	}
	return enums.Language(0)
}

func (x *BusinessUnitGroup) GetSupportedLanguages() []enums.Language {
	if x != nil {
		return x.SupportedLanguages
	}
	return nil
}

func (x *BusinessUnitGroup) GetBusinessUnitIds() []string {
	if x != nil {
		return x.BusinessUnitIds
	}
	return nil
}

type BusinessUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  *pb.VersionID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status              string                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	PrimaryCurrency     enums.Currency        `protobuf:"varint,3,opt,name=primary_currency,proto3,enum=google.retail.enums.currency.Currency" json:"primary_currency,omitempty"`
	SupportedCurrencies []enums.Currency      `protobuf:"varint,4,rep,packed,name=supported_currencies,proto3,enum=google.retail.enums.currency.Currency" json:"supported_currencies,omitempty"`
	OperationalParty    *pb1.OperationalParty `protobuf:"bytes,5,opt,name=operational_party,proto3" json:"operational_party,omitempty"`
	OperationalCapacity int32                 `protobuf:"varint,6,opt,name=operational_capacity,proto3" json:"operational_capacity,omitempty"`
	// Types that are assignable to Detail:
	//
	//	*BusinessUnit_Store
	//	*BusinessUnit_DistributionCenter_
	//	*BusinessUnit_AdministrationCenter_
	Detail isBusinessUnit_Detail `protobuf_oneof:"detail"`
}

func (x *BusinessUnit) Reset() {
	*x = BusinessUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_enterprise_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessUnit) ProtoMessage() {}

func (x *BusinessUnit) ProtoReflect() protoreflect.Message {
	mi := &file_api_enterprise_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessUnit.ProtoReflect.Descriptor instead.
func (*BusinessUnit) Descriptor() ([]byte, []int) {
	return file_api_enterprise_model_proto_rawDescGZIP(), []int{1}
}

func (x *BusinessUnit) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BusinessUnit) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BusinessUnit) GetPrimaryCurrency() enums.Currency {
	if x != nil {
		return x.PrimaryCurrency
	}
	return enums.Currency(0)
}

func (x *BusinessUnit) GetSupportedCurrencies() []enums.Currency {
	if x != nil {
		return x.SupportedCurrencies
	}
	return nil
}

func (x *BusinessUnit) GetOperationalParty() *pb1.OperationalParty {
	if x != nil {
		return x.OperationalParty
	}
	return nil
}

func (x *BusinessUnit) GetOperationalCapacity() int32 {
	if x != nil {
		return x.OperationalCapacity
	}
	return 0
}

func (m *BusinessUnit) GetDetail() isBusinessUnit_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (x *BusinessUnit) GetStore() *BusinessUnit_RetailStore {
	if x, ok := x.GetDetail().(*BusinessUnit_Store); ok {
		return x.Store
	}
	return nil
}

func (x *BusinessUnit) GetDistributionCenter() *BusinessUnit_DistributionCenter {
	if x, ok := x.GetDetail().(*BusinessUnit_DistributionCenter_); ok {
		return x.DistributionCenter
	}
	return nil
}

func (x *BusinessUnit) GetAdministrationCenter() *BusinessUnit_AdministrationCenter {
	if x, ok := x.GetDetail().(*BusinessUnit_AdministrationCenter_); ok {
		return x.AdministrationCenter
	}
	return nil
}

type isBusinessUnit_Detail interface {
	isBusinessUnit_Detail()
}

type BusinessUnit_Store struct {
	Store *BusinessUnit_RetailStore `protobuf:"bytes,7,opt,name=store,proto3,oneof"`
}

type BusinessUnit_DistributionCenter_ struct {
	DistributionCenter *BusinessUnit_DistributionCenter `protobuf:"bytes,8,opt,name=distribution_center,proto3,oneof"`
}

type BusinessUnit_AdministrationCenter_ struct {
	AdministrationCenter *BusinessUnit_AdministrationCenter `protobuf:"bytes,9,opt,name=administration_center,proto3,oneof"`
}

func (*BusinessUnit_Store) isBusinessUnit_Detail() {}

func (*BusinessUnit_DistributionCenter_) isBusinessUnit_Detail() {}

func (*BusinessUnit_AdministrationCenter_) isBusinessUnit_Detail() {}

type TaxCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *pb.VersionID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Deleted     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Country     enums.Country          `protobuf:"varint,5,opt,name=country,proto3,enum=google.retail.enums.countries.Country" json:"country,omitempty"`
	Rates       []*TaxCode_Rate        `protobuf:"bytes,6,rep,name=rates,proto3" json:"rates,omitempty"`
}

func (x *TaxCode) Reset() {
	*x = TaxCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_enterprise_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCode) ProtoMessage() {}

func (x *TaxCode) ProtoReflect() protoreflect.Message {
	mi := &file_api_enterprise_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCode.ProtoReflect.Descriptor instead.
func (*TaxCode) Descriptor() ([]byte, []int) {
	return file_api_enterprise_model_proto_rawDescGZIP(), []int{2}
}

func (x *TaxCode) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TaxCode) GetDeleted() *timestamppb.Timestamp {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *TaxCode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaxCode) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaxCode) GetCountry() enums.Country {
	if x != nil {
		return x.Country
	}
	return enums.Country(0)
}

func (x *TaxCode) GetRates() []*TaxCode_Rate {
	if x != nil {
		return x.Rates
	}
	return nil
}

type BusinessUnit_RetailStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenDate          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=open_date,proto3" json:"open_date,omitempty"`
	CloseDate         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=close_date,proto3" json:"close_date,omitempty"`
	LastRemodeledDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_remodeled_date,proto3" json:"last_remodeled_date,omitempty"`
	NamedMeasures     []*pb.NamedMeasure     `protobuf:"bytes,4,rep,name=named_measures,proto3" json:"named_measures,omitempty"`
}

func (x *BusinessUnit_RetailStore) Reset() {
	*x = BusinessUnit_RetailStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_enterprise_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessUnit_RetailStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessUnit_RetailStore) ProtoMessage() {}

func (x *BusinessUnit_RetailStore) ProtoReflect() protoreflect.Message {
	mi := &file_api_enterprise_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessUnit_RetailStore.ProtoReflect.Descriptor instead.
func (*BusinessUnit_RetailStore) Descriptor() ([]byte, []int) {
	return file_api_enterprise_model_proto_rawDescGZIP(), []int{1, 0}
}

func (x *BusinessUnit_RetailStore) GetOpenDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenDate
	}
	return nil
}

func (x *BusinessUnit_RetailStore) GetCloseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseDate
	}
	return nil
}

func (x *BusinessUnit_RetailStore) GetLastRemodeledDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRemodeledDate
	}
	return nil
}

func (x *BusinessUnit_RetailStore) GetNamedMeasures() []*pb.NamedMeasure {
	if x != nil {
		return x.NamedMeasures
	}
	return nil
}

type BusinessUnit_DistributionCenter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenDate          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=open_date,proto3" json:"open_date,omitempty"`
	CloseDate         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=close_date,proto3" json:"close_date,omitempty"`
	LastRemodeledDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_remodeled_date,proto3" json:"last_remodeled_date,omitempty"`
	NamedMeasures     []*pb.NamedMeasure     `protobuf:"bytes,4,rep,name=named_measures,proto3" json:"named_measures,omitempty"`
}

func (x *BusinessUnit_DistributionCenter) Reset() {
	*x = BusinessUnit_DistributionCenter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_enterprise_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessUnit_DistributionCenter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessUnit_DistributionCenter) ProtoMessage() {}

func (x *BusinessUnit_DistributionCenter) ProtoReflect() protoreflect.Message {
	mi := &file_api_enterprise_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessUnit_DistributionCenter.ProtoReflect.Descriptor instead.
func (*BusinessUnit_DistributionCenter) Descriptor() ([]byte, []int) {
	return file_api_enterprise_model_proto_rawDescGZIP(), []int{1, 1}
}

func (x *BusinessUnit_DistributionCenter) GetOpenDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenDate
	}
	return nil
}

func (x *BusinessUnit_DistributionCenter) GetCloseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseDate
	}
	return nil
}

func (x *BusinessUnit_DistributionCenter) GetLastRemodeledDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRemodeledDate
	}
	return nil
}

func (x *BusinessUnit_DistributionCenter) GetNamedMeasures() []*pb.NamedMeasure {
	if x != nil {
		return x.NamedMeasures
	}
	return nil
}

type BusinessUnit_AdministrationCenter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenDate          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=open_date,proto3" json:"open_date,omitempty"`
	CloseDate         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=close_date,proto3" json:"close_date,omitempty"`
	LastRemodeledDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_remodeled_date,proto3" json:"last_remodeled_date,omitempty"`
	NamedMeasures     []*pb.NamedMeasure     `protobuf:"bytes,4,rep,name=named_measures,proto3" json:"named_measures,omitempty"`
}

func (x *BusinessUnit_AdministrationCenter) Reset() {
	*x = BusinessUnit_AdministrationCenter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_enterprise_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessUnit_AdministrationCenter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessUnit_AdministrationCenter) ProtoMessage() {}

func (x *BusinessUnit_AdministrationCenter) ProtoReflect() protoreflect.Message {
	mi := &file_api_enterprise_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessUnit_AdministrationCenter.ProtoReflect.Descriptor instead.
func (*BusinessUnit_AdministrationCenter) Descriptor() ([]byte, []int) {
	return file_api_enterprise_model_proto_rawDescGZIP(), []int{1, 2}
}

func (x *BusinessUnit_AdministrationCenter) GetOpenDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenDate
	}
	return nil
}

func (x *BusinessUnit_AdministrationCenter) GetCloseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseDate
	}
	return nil
}

func (x *BusinessUnit_AdministrationCenter) GetLastRemodeledDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRemodeledDate
	}
	return nil
}

func (x *BusinessUnit_AdministrationCenter) GetNamedMeasures() []*pb.NamedMeasure {
	if x != nil {
		return x.NamedMeasures
	}
	return nil
}

type TaxCode_Rate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *pb.VersionID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Deleted      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Name         string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description  string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Municipality string                 `protobuf:"bytes,5,opt,name=municipality,proto3" json:"municipality,omitempty"`
	Rate         float64                `protobuf:"fixed64,6,opt,name=rate,proto3" json:"rate,omitempty"`
	CategoryIds  []string               `protobuf:"bytes,7,rep,name=category_ids,proto3" json:"category_ids,omitempty"`
}

func (x *TaxCode_Rate) Reset() {
	*x = TaxCode_Rate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_enterprise_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxCode_Rate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxCode_Rate) ProtoMessage() {}

func (x *TaxCode_Rate) ProtoReflect() protoreflect.Message {
	mi := &file_api_enterprise_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxCode_Rate.ProtoReflect.Descriptor instead.
func (*TaxCode_Rate) Descriptor() ([]byte, []int) {
	return file_api_enterprise_model_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TaxCode_Rate) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TaxCode_Rate) GetDeleted() *timestamppb.Timestamp {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *TaxCode_Rate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaxCode_Rate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaxCode_Rate) GetMunicipality() string {
	if x != nil {
		return x.Municipality
	}
	return ""
}

func (x *TaxCode_Rate) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *TaxCode_Rate) GetCategoryIds() []string {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

var File_api_enterprise_model_proto protoreflect.FileDescriptor

var file_api_enterprise_model_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6c, 0x61,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x71, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x02, 0x0a, 0x11, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x32, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x4e, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x10,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x4a, 0x0a, 0x13, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x22, 0xea, 0x0c, 0x0a, 0x0c, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x5a, 0x0a, 0x14, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x14, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x11, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x11, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x12,
	0x32, 0x0a, 0x14, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x63,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x4d, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x52, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x70, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x13, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x12, 0x76, 0x0a, 0x15, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x15, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x1a, 0xa0, 0x02, 0x0a,
	0x0b, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x38, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x4d, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52,
	0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x1a,
	0xa7, 0x02, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4c, 0x0a, 0x13,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x65, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x6e, 0x61,
	0x6d, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x64,
	0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x1a, 0xa9, 0x02, 0x0a, 0x14, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x12, 0x38, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0a,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x65,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x73, 0x3a, 0x16, 0xea, 0x3f, 0x13, 0x0a, 0x11, 0x74, 0x62, 0x6c, 0x5f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x42, 0x08, 0x0a,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xc4, 0x04, 0x0a, 0x07, 0x54, 0x61, 0x78, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x3f, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x72, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x82, 0x02, 0x0a, 0x04, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x32, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x3a, 0x11, 0xea, 0x3f, 0x0e,
	0x0a, 0x0c, 0x74, 0x62, 0x6c, 0x5f, 0x74, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x63,
	0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x70,
	0x62, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x2d,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_enterprise_model_proto_rawDescOnce sync.Once
	file_api_enterprise_model_proto_rawDescData = file_api_enterprise_model_proto_rawDesc
)

func file_api_enterprise_model_proto_rawDescGZIP() []byte {
	file_api_enterprise_model_proto_rawDescOnce.Do(func() {
		file_api_enterprise_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_enterprise_model_proto_rawDescData)
	})
	return file_api_enterprise_model_proto_rawDescData
}

var file_api_enterprise_model_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_enterprise_model_proto_goTypes = []interface{}{
	(*BusinessUnitGroup)(nil),                 // 0: google.retail.enterprise.pb.BusinessUnitGroup
	(*BusinessUnit)(nil),                      // 1: google.retail.enterprise.pb.BusinessUnit
	(*TaxCode)(nil),                           // 2: google.retail.enterprise.pb.TaxCode
	(*BusinessUnit_RetailStore)(nil),          // 3: google.retail.enterprise.pb.BusinessUnit.RetailStore
	(*BusinessUnit_DistributionCenter)(nil),   // 4: google.retail.enterprise.pb.BusinessUnit.DistributionCenter
	(*BusinessUnit_AdministrationCenter)(nil), // 5: google.retail.enterprise.pb.BusinessUnit.AdministrationCenter
	(*TaxCode_Rate)(nil),                      // 6: google.retail.enterprise.pb.TaxCode.Rate
	(*pb.VersionID)(nil),                      // 7: google.retail.common.pb.VersionID
	(enums.Language)(0),                       // 8: google.retail.enums.lang.Language
	(enums.Currency)(0),                       // 9: google.retail.enums.currency.Currency
	(*pb1.OperationalParty)(nil),              // 10: google.retail.party.pb.OperationalParty
	(*timestamppb.Timestamp)(nil),             // 11: google.protobuf.Timestamp
	(enums.Country)(0),                        // 12: google.retail.enums.countries.Country
	(*pb.NamedMeasure)(nil),                   // 13: google.retail.common.pb.NamedMeasure
}
var file_api_enterprise_model_proto_depIdxs = []int32{
	7,  // 0: google.retail.enterprise.pb.BusinessUnitGroup.id:type_name -> google.retail.common.pb.VersionID
	8,  // 1: google.retail.enterprise.pb.BusinessUnitGroup.primary_language:type_name -> google.retail.enums.lang.Language
	8,  // 2: google.retail.enterprise.pb.BusinessUnitGroup.supported_languages:type_name -> google.retail.enums.lang.Language
	7,  // 3: google.retail.enterprise.pb.BusinessUnit.id:type_name -> google.retail.common.pb.VersionID
	9,  // 4: google.retail.enterprise.pb.BusinessUnit.primary_currency:type_name -> google.retail.enums.currency.Currency
	9,  // 5: google.retail.enterprise.pb.BusinessUnit.supported_currencies:type_name -> google.retail.enums.currency.Currency
	10, // 6: google.retail.enterprise.pb.BusinessUnit.operational_party:type_name -> google.retail.party.pb.OperationalParty
	3,  // 7: google.retail.enterprise.pb.BusinessUnit.store:type_name -> google.retail.enterprise.pb.BusinessUnit.RetailStore
	4,  // 8: google.retail.enterprise.pb.BusinessUnit.distribution_center:type_name -> google.retail.enterprise.pb.BusinessUnit.DistributionCenter
	5,  // 9: google.retail.enterprise.pb.BusinessUnit.administration_center:type_name -> google.retail.enterprise.pb.BusinessUnit.AdministrationCenter
	7,  // 10: google.retail.enterprise.pb.TaxCode.id:type_name -> google.retail.common.pb.VersionID
	11, // 11: google.retail.enterprise.pb.TaxCode.deleted:type_name -> google.protobuf.Timestamp
	12, // 12: google.retail.enterprise.pb.TaxCode.country:type_name -> google.retail.enums.countries.Country
	6,  // 13: google.retail.enterprise.pb.TaxCode.rates:type_name -> google.retail.enterprise.pb.TaxCode.Rate
	11, // 14: google.retail.enterprise.pb.BusinessUnit.RetailStore.open_date:type_name -> google.protobuf.Timestamp
	11, // 15: google.retail.enterprise.pb.BusinessUnit.RetailStore.close_date:type_name -> google.protobuf.Timestamp
	11, // 16: google.retail.enterprise.pb.BusinessUnit.RetailStore.last_remodeled_date:type_name -> google.protobuf.Timestamp
	13, // 17: google.retail.enterprise.pb.BusinessUnit.RetailStore.named_measures:type_name -> google.retail.common.pb.NamedMeasure
	11, // 18: google.retail.enterprise.pb.BusinessUnit.DistributionCenter.open_date:type_name -> google.protobuf.Timestamp
	11, // 19: google.retail.enterprise.pb.BusinessUnit.DistributionCenter.close_date:type_name -> google.protobuf.Timestamp
	11, // 20: google.retail.enterprise.pb.BusinessUnit.DistributionCenter.last_remodeled_date:type_name -> google.protobuf.Timestamp
	13, // 21: google.retail.enterprise.pb.BusinessUnit.DistributionCenter.named_measures:type_name -> google.retail.common.pb.NamedMeasure
	11, // 22: google.retail.enterprise.pb.BusinessUnit.AdministrationCenter.open_date:type_name -> google.protobuf.Timestamp
	11, // 23: google.retail.enterprise.pb.BusinessUnit.AdministrationCenter.close_date:type_name -> google.protobuf.Timestamp
	11, // 24: google.retail.enterprise.pb.BusinessUnit.AdministrationCenter.last_remodeled_date:type_name -> google.protobuf.Timestamp
	13, // 25: google.retail.enterprise.pb.BusinessUnit.AdministrationCenter.named_measures:type_name -> google.retail.common.pb.NamedMeasure
	7,  // 26: google.retail.enterprise.pb.TaxCode.Rate.id:type_name -> google.retail.common.pb.VersionID
	11, // 27: google.retail.enterprise.pb.TaxCode.Rate.deleted:type_name -> google.protobuf.Timestamp
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_api_enterprise_model_proto_init() }
func file_api_enterprise_model_proto_init() {
	if File_api_enterprise_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_enterprise_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessUnitGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_enterprise_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_enterprise_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaxCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_enterprise_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessUnit_RetailStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_enterprise_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessUnit_DistributionCenter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_enterprise_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessUnit_AdministrationCenter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_enterprise_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaxCode_Rate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_enterprise_model_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*BusinessUnit_Store)(nil),
		(*BusinessUnit_DistributionCenter_)(nil),
		(*BusinessUnit_AdministrationCenter_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_enterprise_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_enterprise_model_proto_goTypes,
		DependencyIndexes: file_api_enterprise_model_proto_depIdxs,
		MessageInfos:      file_api_enterprise_model_proto_msgTypes,
	}.Build()
	File_api_enterprise_model_proto = out.File
	file_api_enterprise_model_proto_rawDesc = nil
	file_api_enterprise_model_proto_goTypes = nil
	file_api_enterprise_model_proto_depIdxs = nil
}
