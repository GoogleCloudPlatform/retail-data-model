// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.10
// source: api/location/model.proto

package pb

import (
	_ "github.com/GoogleCloudPlatform/protoc-gen-bq-schema/protos"
	pb "github.com/GoogleCloudPlatform/retail-data-model/common/pb"
	enums "github.com/GoogleCloudPlatform/retail-data-model/enums"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Site struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *pb.VersionID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SiteType           string                 `protobuf:"bytes,2,opt,name=site_type,json=site_t,proto3" json:"site_type,omitempty"`
	Location           *Site_PhysicalLocation `protobuf:"bytes,3,opt,name=location,json=loc,proto3" json:"location,omitempty"`
	OperationalPartyId string                 `protobuf:"bytes,4,opt,name=operational_party_id,json=op_prty_id,proto3" json:"operational_party_id,omitempty"`
	IcaoCode           string                 `protobuf:"bytes,6,opt,name=icao_code,json=icao_cd,proto3" json:"icao_code,omitempty"`
	TimeZone           enums.TimeZone         `protobuf:"varint,7,opt,name=time_zone,json=tz,proto3,enum=google.retail.enums.time.TimeZone" json:"time_zone,omitempty"`
	Contacts           []*pb.Contact          `protobuf:"bytes,8,rep,name=contacts,json=cntcts,proto3" json:"contacts,omitempty"`
	AngleOffsetDegrees float64                `protobuf:"fixed64,10,opt,name=angle_offset_degrees,json=ang_offset,proto3" json:"angle_offset_degrees,omitempty"`
	Meta               map[string]string      `protobuf:"bytes,11,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LocationIds        []string               `protobuf:"bytes,9,rep,name=location_ids,json=loc_ids,proto3" json:"location_ids,omitempty"`
}

func (x *Site) Reset() {
	*x = Site{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_location_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Site) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Site) ProtoMessage() {}

func (x *Site) ProtoReflect() protoreflect.Message {
	mi := &file_api_location_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Site.ProtoReflect.Descriptor instead.
func (*Site) Descriptor() ([]byte, []int) {
	return file_api_location_model_proto_rawDescGZIP(), []int{0}
}

func (x *Site) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Site) GetSiteType() string {
	if x != nil {
		return x.SiteType
	}
	return ""
}

func (x *Site) GetLocation() *Site_PhysicalLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Site) GetOperationalPartyId() string {
	if x != nil {
		return x.OperationalPartyId
	}
	return ""
}

func (x *Site) GetIcaoCode() string {
	if x != nil {
		return x.IcaoCode
	}
	return ""
}

func (x *Site) GetTimeZone() enums.TimeZone {
	if x != nil {
		return x.TimeZone
	}
	return enums.TimeZone(0)
}

func (x *Site) GetContacts() []*pb.Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *Site) GetAngleOffsetDegrees() float64 {
	if x != nil {
		return x.AngleOffsetDegrees
	}
	return 0
}

func (x *Site) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Site) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type LocationMeasure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,json=nm,proto3" json:"name,omitempty"`
	// Types that are assignable to Uom:
	//
	//	*LocationMeasure_Distance
	//	*LocationMeasure_Count
	//	*LocationMeasure_Capacity
	//	*LocationMeasure_Area
	//	*LocationMeasure_Weight
	Uom   isLocationMeasure_Uom `protobuf_oneof:"uom"`
	Value float64               `protobuf:"fixed64,20,opt,name=value,json=val,proto3" json:"value,omitempty"`
}

func (x *LocationMeasure) Reset() {
	*x = LocationMeasure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_location_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationMeasure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationMeasure) ProtoMessage() {}

func (x *LocationMeasure) ProtoReflect() protoreflect.Message {
	mi := &file_api_location_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationMeasure.ProtoReflect.Descriptor instead.
func (*LocationMeasure) Descriptor() ([]byte, []int) {
	return file_api_location_model_proto_rawDescGZIP(), []int{1}
}

func (x *LocationMeasure) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *LocationMeasure) GetUom() isLocationMeasure_Uom {
	if m != nil {
		return m.Uom
	}
	return nil
}

func (x *LocationMeasure) GetDistance() enums.Distance {
	if x, ok := x.GetUom().(*LocationMeasure_Distance); ok {
		return x.Distance
	}
	return enums.Distance(0)
}

func (x *LocationMeasure) GetCount() enums.Count {
	if x, ok := x.GetUom().(*LocationMeasure_Count); ok {
		return x.Count
	}
	return enums.Count(0)
}

func (x *LocationMeasure) GetCapacity() enums.Capacity {
	if x, ok := x.GetUom().(*LocationMeasure_Capacity); ok {
		return x.Capacity
	}
	return enums.Capacity(0)
}

func (x *LocationMeasure) GetArea() enums.Area {
	if x, ok := x.GetUom().(*LocationMeasure_Area); ok {
		return x.Area
	}
	return enums.Area(0)
}

func (x *LocationMeasure) GetWeight() enums.Weight {
	if x, ok := x.GetUom().(*LocationMeasure_Weight); ok {
		return x.Weight
	}
	return enums.Weight(0)
}

func (x *LocationMeasure) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type isLocationMeasure_Uom interface {
	isLocationMeasure_Uom()
}

type LocationMeasure_Distance struct {
	Distance enums.Distance `protobuf:"varint,2,opt,name=distance,json=dist,proto3,enum=google.retail.enums.uom.Distance,oneof"`
}

type LocationMeasure_Count struct {
	Count enums.Count `protobuf:"varint,3,opt,name=count,json=cnt,proto3,enum=google.retail.enums.uom.Count,oneof"`
}

type LocationMeasure_Capacity struct {
	Capacity enums.Capacity `protobuf:"varint,4,opt,name=capacity,json=cap,proto3,enum=google.retail.enums.uom.Capacity,oneof"`
}

type LocationMeasure_Area struct {
	Area enums.Area `protobuf:"varint,5,opt,name=area,json=ara,proto3,enum=google.retail.enums.uom.Area,oneof"`
}

type LocationMeasure_Weight struct {
	Weight enums.Weight `protobuf:"varint,6,opt,name=weight,json=wgt,proto3,enum=google.retail.enums.uom.Weight,oneof"`
}

func (*LocationMeasure_Distance) isLocationMeasure_Uom() {}

func (*LocationMeasure_Count) isLocationMeasure_Uom() {}

func (*LocationMeasure_Capacity) isLocationMeasure_Uom() {}

func (*LocationMeasure_Area) isLocationMeasure_Uom() {}

func (*LocationMeasure_Weight) isLocationMeasure_Uom() {}

type LocationCoordinate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AngleOffsetDegrees float64                              `protobuf:"fixed64,1,opt,name=angle_offset_degrees,json=ang_offset,proto3" json:"angle_offset_degrees,omitempty"`
	UnitOfMeasure      enums.Distance                       `protobuf:"varint,2,opt,name=unit_of_measure,json=uom,proto3,enum=google.retail.enums.uom.Distance" json:"unit_of_measure,omitempty"`
	X                  float64                              `protobuf:"fixed64,3,opt,name=x,proto3" json:"x,omitempty"`
	Y                  float64                              `protobuf:"fixed64,4,opt,name=y,proto3" json:"y,omitempty"`
	Z                  float64                              `protobuf:"fixed64,5,opt,name=z,proto3" json:"z,omitempty"`
	LocationVertices   []*LocationCoordinate_LocationVertex `protobuf:"bytes,6,rep,name=location_vertices,json=vertices,proto3" json:"location_vertices,omitempty"`
}

func (x *LocationCoordinate) Reset() {
	*x = LocationCoordinate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_location_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationCoordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationCoordinate) ProtoMessage() {}

func (x *LocationCoordinate) ProtoReflect() protoreflect.Message {
	mi := &file_api_location_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationCoordinate.ProtoReflect.Descriptor instead.
func (*LocationCoordinate) Descriptor() ([]byte, []int) {
	return file_api_location_model_proto_rawDescGZIP(), []int{2}
}

func (x *LocationCoordinate) GetAngleOffsetDegrees() float64 {
	if x != nil {
		return x.AngleOffsetDegrees
	}
	return 0
}

func (x *LocationCoordinate) GetUnitOfMeasure() enums.Distance {
	if x != nil {
		return x.UnitOfMeasure
	}
	return enums.Distance(0)
}

func (x *LocationCoordinate) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *LocationCoordinate) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *LocationCoordinate) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *LocationCoordinate) GetLocationVertices() []*LocationCoordinate_LocationVertex {
	if x != nil {
		return x.LocationVertices
	}
	return nil
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                            *pb.VersionID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LocationType                  string                 `protobuf:"bytes,2,opt,name=location_type,json=loc_t,proto3" json:"location_type,omitempty"`
	LocationFunctionType          string                 `protobuf:"bytes,3,opt,name=location_function_type,json=loc_func,proto3" json:"location_function_type,omitempty"`
	InventoryLocationSecurityType string                 `protobuf:"bytes,4,opt,name=inventory_location_security_type,json=inv_loc_sec,proto3" json:"inventory_location_security_type,omitempty"`
	StockLedgerControlFlag        bool                   `protobuf:"varint,5,opt,name=stock_ledger_control_flag,json=stk_ldgr_ctl,proto3" json:"stock_ledger_control_flag,omitempty"`
	Measures                      []*LocationMeasure     `protobuf:"bytes,6,rep,name=measures,proto3" json:"measures,omitempty"`
	MerchandiseGroups             []*Location_MerchGroup `protobuf:"bytes,7,rep,name=merchandise_groups,json=merch_grps,proto3" json:"merchandise_groups,omitempty"`
	LocationCoordinate            *LocationCoordinate    `protobuf:"bytes,8,opt,name=location_coordinate,json=loc_crd,proto3" json:"location_coordinate,omitempty"`
	Meta                          map[string]string      `protobuf:"bytes,9,rep,name=meta,json=store_ids,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Locations                     []*Location            `protobuf:"bytes,10,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_location_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_api_location_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_api_location_model_proto_rawDescGZIP(), []int{3}
}

func (x *Location) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Location) GetLocationType() string {
	if x != nil {
		return x.LocationType
	}
	return ""
}

func (x *Location) GetLocationFunctionType() string {
	if x != nil {
		return x.LocationFunctionType
	}
	return ""
}

func (x *Location) GetInventoryLocationSecurityType() string {
	if x != nil {
		return x.InventoryLocationSecurityType
	}
	return ""
}

func (x *Location) GetStockLedgerControlFlag() bool {
	if x != nil {
		return x.StockLedgerControlFlag
	}
	return false
}

func (x *Location) GetMeasures() []*LocationMeasure {
	if x != nil {
		return x.Measures
	}
	return nil
}

func (x *Location) GetMerchandiseGroups() []*Location_MerchGroup {
	if x != nil {
		return x.MerchandiseGroups
	}
	return nil
}

func (x *Location) GetLocationCoordinate() *LocationCoordinate {
	if x != nil {
		return x.LocationCoordinate
	}
	return nil
}

func (x *Location) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Location) GetLocations() []*Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

type GeoSegmentGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *pb.VersionID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          enums.GeoSegmentGroup `protobuf:"varint,2,opt,name=type,json=t,proto3,enum=google.retail.enums.geo.GeoSegmentGroup" json:"type,omitempty"`
	GeoSegmentIds []string              `protobuf:"bytes,3,rep,name=geo_segment_ids,json=segment_ids,proto3" json:"geo_segment_ids,omitempty"`
}

func (x *GeoSegmentGroup) Reset() {
	*x = GeoSegmentGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_location_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoSegmentGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoSegmentGroup) ProtoMessage() {}

func (x *GeoSegmentGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_location_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoSegmentGroup.ProtoReflect.Descriptor instead.
func (*GeoSegmentGroup) Descriptor() ([]byte, []int) {
	return file_api_location_model_proto_rawDescGZIP(), []int{4}
}

func (x *GeoSegmentGroup) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GeoSegmentGroup) GetType() enums.GeoSegmentGroup {
	if x != nil {
		return x.Type
	}
	return enums.GeoSegmentGroup(0)
}

func (x *GeoSegmentGroup) GetGeoSegmentIds() []string {
	if x != nil {
		return x.GeoSegmentIds
	}
	return nil
}

type GeoSegment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *pb.VersionID    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type         enums.GeoSegment `protobuf:"varint,2,opt,name=type,json=t,proto3,enum=google.retail.enums.geo.GeoSegment" json:"type,omitempty"`
	Abbreviation string           `protobuf:"bytes,3,opt,name=abbreviation,json=abbr,proto3" json:"abbreviation,omitempty"`
	Description  string           `protobuf:"bytes,4,opt,name=description,json=desc,proto3" json:"description,omitempty"`
	Sites        []*Site          `protobuf:"bytes,5,rep,name=sites,proto3" json:"sites,omitempty"`
	Children     []*GeoSegment    `protobuf:"bytes,6,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *GeoSegment) Reset() {
	*x = GeoSegment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_location_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoSegment) ProtoMessage() {}

func (x *GeoSegment) ProtoReflect() protoreflect.Message {
	mi := &file_api_location_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoSegment.ProtoReflect.Descriptor instead.
func (*GeoSegment) Descriptor() ([]byte, []int) {
	return file_api_location_model_proto_rawDescGZIP(), []int{5}
}

func (x *GeoSegment) GetId() *pb.VersionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GeoSegment) GetType() enums.GeoSegment {
	if x != nil {
		return x.Type
	}
	return enums.GeoSegment(0)
}

func (x *GeoSegment) GetAbbreviation() string {
	if x != nil {
		return x.Abbreviation
	}
	return ""
}

func (x *GeoSegment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GeoSegment) GetSites() []*Site {
	if x != nil {
		return x.Sites
	}
	return nil
}

func (x *GeoSegment) GetChildren() []*GeoSegment {
	if x != nil {
		return x.Children
	}
	return nil
}

type Site_PhysicalLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address                *pb.Address   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Climate                enums.Climate `protobuf:"varint,2,opt,name=climate,proto3,enum=google.retail.enums.climate.Climate" json:"climate,omitempty"`
	LongitudeDegrees       int32         `protobuf:"varint,3,opt,name=longitude_degrees,json=lng_d,proto3" json:"longitude_degrees,omitempty"`
	LongitudeMinutes       int32         `protobuf:"varint,4,opt,name=longitude_minutes,json=lng_m,proto3" json:"longitude_minutes,omitempty"`
	LongitudeSeconds       int32         `protobuf:"varint,5,opt,name=longitude_seconds,json=lng_s,proto3" json:"longitude_seconds,omitempty"`
	LongitudeDirectionCode string        `protobuf:"bytes,6,opt,name=longitude_direction_code,json=lng_dir_code,proto3" json:"longitude_direction_code,omitempty"`
	LatitudeDegrees        int32         `protobuf:"varint,7,opt,name=latitude_degrees,json=lat_d,proto3" json:"latitude_degrees,omitempty"`
	LatitudeMinutes        int32         `protobuf:"varint,8,opt,name=latitude_minutes,json=lat_m,proto3" json:"latitude_minutes,omitempty"`
	LatitudeSeconds        int32         `protobuf:"varint,9,opt,name=latitude_seconds,json=lat_s,proto3" json:"latitude_seconds,omitempty"`
	LatitudeDirectionCode  string        `protobuf:"bytes,10,opt,name=latitude_direction_code,json=lat_dir_code,proto3" json:"latitude_direction_code,omitempty"`
	AltitudeMeters         float64       `protobuf:"fixed64,11,opt,name=altitude_meters,json=alt_m,proto3" json:"altitude_meters,omitempty"`
}

func (x *Site_PhysicalLocation) Reset() {
	*x = Site_PhysicalLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_location_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Site_PhysicalLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Site_PhysicalLocation) ProtoMessage() {}

func (x *Site_PhysicalLocation) ProtoReflect() protoreflect.Message {
	mi := &file_api_location_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Site_PhysicalLocation.ProtoReflect.Descriptor instead.
func (*Site_PhysicalLocation) Descriptor() ([]byte, []int) {
	return file_api_location_model_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Site_PhysicalLocation) GetAddress() *pb.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Site_PhysicalLocation) GetClimate() enums.Climate {
	if x != nil {
		return x.Climate
	}
	return enums.Climate(0)
}

func (x *Site_PhysicalLocation) GetLongitudeDegrees() int32 {
	if x != nil {
		return x.LongitudeDegrees
	}
	return 0
}

func (x *Site_PhysicalLocation) GetLongitudeMinutes() int32 {
	if x != nil {
		return x.LongitudeMinutes
	}
	return 0
}

func (x *Site_PhysicalLocation) GetLongitudeSeconds() int32 {
	if x != nil {
		return x.LongitudeSeconds
	}
	return 0
}

func (x *Site_PhysicalLocation) GetLongitudeDirectionCode() string {
	if x != nil {
		return x.LongitudeDirectionCode
	}
	return ""
}

func (x *Site_PhysicalLocation) GetLatitudeDegrees() int32 {
	if x != nil {
		return x.LatitudeDegrees
	}
	return 0
}

func (x *Site_PhysicalLocation) GetLatitudeMinutes() int32 {
	if x != nil {
		return x.LatitudeMinutes
	}
	return 0
}

func (x *Site_PhysicalLocation) GetLatitudeSeconds() int32 {
	if x != nil {
		return x.LatitudeSeconds
	}
	return 0
}

func (x *Site_PhysicalLocation) GetLatitudeDirectionCode() string {
	if x != nil {
		return x.LatitudeDirectionCode
	}
	return ""
}

func (x *Site_PhysicalLocation) GetAltitudeMeters() float64 {
	if x != nil {
		return x.AltitudeMeters
	}
	return 0
}

type LocationCoordinate_LocationVertex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ordinal int32   `protobuf:"varint,1,opt,name=ordinal,json=ord,proto3" json:"ordinal,omitempty"`
	X       float64 `protobuf:"fixed64,2,opt,name=x,proto3" json:"x,omitempty"`
	Y       float64 `protobuf:"fixed64,3,opt,name=y,proto3" json:"y,omitempty"`
	Z       float64 `protobuf:"fixed64,4,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *LocationCoordinate_LocationVertex) Reset() {
	*x = LocationCoordinate_LocationVertex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_location_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationCoordinate_LocationVertex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationCoordinate_LocationVertex) ProtoMessage() {}

func (x *LocationCoordinate_LocationVertex) ProtoReflect() protoreflect.Message {
	mi := &file_api_location_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationCoordinate_LocationVertex.ProtoReflect.Descriptor instead.
func (*LocationCoordinate_LocationVertex) Descriptor() ([]byte, []int) {
	return file_api_location_model_proto_rawDescGZIP(), []int{2, 0}
}

func (x *LocationCoordinate_LocationVertex) GetOrdinal() int32 {
	if x != nil {
		return x.Ordinal
	}
	return 0
}

func (x *LocationCoordinate_LocationVertex) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *LocationCoordinate_LocationVertex) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *LocationCoordinate_LocationVertex) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

type Location_MerchGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchandiseHierarchyId string                 `protobuf:"bytes,1,opt,name=merchandise_hierarchy_id,json=merch_hrchy_id,proto3" json:"merchandise_hierarchy_id,omitempty"`
	EffectiveDate          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=effective_date,json=eff_date,proto3" json:"effective_date,omitempty"`
	PerformanceScore       float64                `protobuf:"fixed64,3,opt,name=performance_score,json=score,proto3" json:"performance_score,omitempty"`
}

func (x *Location_MerchGroup) Reset() {
	*x = Location_MerchGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_location_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location_MerchGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location_MerchGroup) ProtoMessage() {}

func (x *Location_MerchGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_location_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location_MerchGroup.ProtoReflect.Descriptor instead.
func (*Location_MerchGroup) Descriptor() ([]byte, []int) {
	return file_api_location_model_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Location_MerchGroup) GetMerchandiseHierarchyId() string {
	if x != nil {
		return x.MerchandiseHierarchyId
	}
	return ""
}

func (x *Location_MerchGroup) GetEffectiveDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectiveDate
	}
	return nil
}

func (x *Location_MerchGroup) GetPerformanceScore() float64 {
	if x != nil {
		return x.PerformanceScore
	}
	return 0
}

var File_api_location_model_proto protoreflect.FileDescriptor

var file_api_location_model_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x1a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2f, 0x75, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x61, 0x70, 0x69, 0x2f,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x67, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x7a, 0x6f, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x61, 0x70, 0x69, 0x2f,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x63, 0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61, 0x70,
	0x69, 0x2f, 0x62, 0x71, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x84, 0x08, 0x0a, 0x04, 0x53, 0x69, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x12, 0x47, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x2e, 0x50, 0x68, 0x79, 0x73,
	0x69, 0x63, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x6c, 0x6f,
	0x63, 0x12, 0x28, 0x0a, 0x14, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x70, 0x5f, 0x70, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x09, 0x69,
	0x63, 0x61, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x69, 0x63, 0x61, 0x6f, 0x5f, 0x63, 0x64, 0x12, 0x39, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x02,
	0x74, 0x7a, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x06, 0x63, 0x6e, 0x74, 0x63, 0x74, 0x73, 0x12, 0x28,
	0x0a, 0x14, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x64,
	0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x61, 0x6e,
	0x67, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x6f, 0x63, 0x5f, 0x69, 0x64, 0x73, 0x1a, 0xd6, 0x03, 0x0a, 0x10, 0x50, 0x68, 0x79, 0x73, 0x69,
	0x63, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x6c, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x63,
	0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x07,
	0x63, 0x6c, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x11, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x6e, 0x67, 0x5f, 0x64, 0x12, 0x20, 0x0a, 0x11, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x6e, 0x67, 0x5f, 0x6d, 0x12, 0x20, 0x0a, 0x11, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x6e, 0x67, 0x5f, 0x73, 0x12, 0x2e, 0x0a,
	0x18, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6c, 0x6e, 0x67, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a,
	0x10, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x61, 0x74, 0x5f, 0x64, 0x12, 0x1f,
	0x0a, 0x10, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x61, 0x74, 0x5f, 0x6d, 0x12,
	0x1f, 0x0a, 0x10, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x61, 0x74, 0x5f, 0x73,
	0x12, 0x2d, 0x0a, 0x17, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6c, 0x61, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x1e, 0x0a, 0x0f, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x61, 0x6c, 0x74, 0x5f, 0x6d, 0x1a,
	0x37, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x0d, 0xea, 0x3f, 0x0a, 0x0a, 0x08, 0x74,
	0x62, 0x6c, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x22, 0xdf, 0x02, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x6d, 0x12, 0x3b, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x75, 0x6f, 0x6d, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e,
	0x75, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x03, 0x63, 0x6e, 0x74,
	0x12, 0x3a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x75, 0x6f, 0x6d, 0x2e, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x03, 0x63, 0x61, 0x70, 0x12, 0x32, 0x0a, 0x04,
	0x61, 0x72, 0x65, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x75, 0x6f, 0x6d, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x48, 0x00, 0x52, 0x03, 0x61, 0x72, 0x61,
	0x12, 0x36, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x75, 0x6f, 0x6d, 0x2e, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x48, 0x00, 0x52, 0x03, 0x77, 0x67, 0x74, 0x12, 0x12, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x42, 0x05, 0x0a, 0x03,
	0x75, 0x6f, 0x6d, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x14, 0x22, 0xde, 0x02, 0x0a, 0x12, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x14, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x5f, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x61, 0x6e, 0x67, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x3f, 0x0a, 0x0f, 0x75, 0x6e,
	0x69, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x75, 0x6f, 0x6d, 0x2e, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x03, 0x75, 0x6f, 0x6d, 0x12, 0x0c, 0x0a, 0x01, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x01, 0x7a, 0x12, 0x61, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x08,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x50, 0x0a, 0x0e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x07, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6f, 0x72, 0x64,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01,
	0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x7a, 0x22, 0xdb, 0x06, 0x0a, 0x08, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x0d, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x5f, 0x74, 0x12, 0x28, 0x0a, 0x16, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x5f, 0x66,
	0x75, 0x6e, 0x63, 0x12, 0x35, 0x0a, 0x20, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69,
	0x6e, 0x76, 0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x73, 0x65, 0x63, 0x12, 0x2f, 0x0a, 0x19, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73,
	0x74, 0x6b, 0x5f, 0x6c, 0x64, 0x67, 0x72, 0x5f, 0x63, 0x74, 0x6c, 0x12, 0x46, 0x0a, 0x08, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x12, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69,
	0x73, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x5f, 0x67, 0x72, 0x70, 0x73, 0x12, 0x53, 0x0a, 0x13, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x5f, 0x63, 0x72, 0x64,
	0x12, 0x46, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x12, 0x41, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x9e, 0x01, 0x0a, 0x0a,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x30, 0x0a, 0x18, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x5f, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72,
	0x63, 0x68, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x5f, 0x68, 0x72, 0x63, 0x68, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x0e,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x65, 0x66, 0x66, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x11, 0x70, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x37, 0x0a, 0x09,
	0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x11, 0xea, 0x3f, 0x0e, 0x0a, 0x0c, 0x74, 0x62, 0x6c, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x6f,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x32, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x39, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x6f, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x01, 0x74, 0x12, 0x24, 0x0a, 0x0f, 0x67,
	0x65, 0x6f, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x73, 0x3a, 0x1a, 0xea, 0x3f, 0x17, 0x0a, 0x15, 0x74, 0x62, 0x6c, 0x5f, 0x67, 0x65, 0x6f, 0x5f,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xbd, 0x02,
	0x0a, 0x0a, 0x47, 0x65, 0x6f, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x6f, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x01, 0x74, 0x12, 0x1a, 0x0a, 0x0c, 0x61, 0x62, 0x62, 0x72, 0x65, 0x76,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x62,
	0x62, 0x72, 0x12, 0x19, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x35, 0x0a,
	0x05, 0x73, 0x69, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x69, 0x74, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x6f, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x3a, 0x14, 0xea, 0x3f, 0x11, 0x0a, 0x0f, 0x74, 0x62,
	0x6c, 0x5f, 0x67, 0x65, 0x6f, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x5f, 0x0a,
	0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x62, 0x50, 0x01,
	0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2f, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_location_model_proto_rawDescOnce sync.Once
	file_api_location_model_proto_rawDescData = file_api_location_model_proto_rawDesc
)

func file_api_location_model_proto_rawDescGZIP() []byte {
	file_api_location_model_proto_rawDescOnce.Do(func() {
		file_api_location_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_location_model_proto_rawDescData)
	})
	return file_api_location_model_proto_rawDescData
}

var file_api_location_model_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_location_model_proto_goTypes = []interface{}{
	(*Site)(nil),                  // 0: google.retail.location.pb.Site
	(*LocationMeasure)(nil),       // 1: google.retail.location.pb.LocationMeasure
	(*LocationCoordinate)(nil),    // 2: google.retail.location.pb.LocationCoordinate
	(*Location)(nil),              // 3: google.retail.location.pb.Location
	(*GeoSegmentGroup)(nil),       // 4: google.retail.location.pb.GeoSegmentGroup
	(*GeoSegment)(nil),            // 5: google.retail.location.pb.GeoSegment
	(*Site_PhysicalLocation)(nil), // 6: google.retail.location.pb.Site.PhysicalLocation
	nil,                           // 7: google.retail.location.pb.Site.MetaEntry
	(*LocationCoordinate_LocationVertex)(nil), // 8: google.retail.location.pb.LocationCoordinate.LocationVertex
	(*Location_MerchGroup)(nil),               // 9: google.retail.location.pb.Location.MerchGroup
	nil,                                       // 10: google.retail.location.pb.Location.MetaEntry
	(*pb.VersionID)(nil),                      // 11: google.retail.common.pb.VersionID
	(enums.TimeZone)(0),                       // 12: google.retail.enums.time.TimeZone
	(*pb.Contact)(nil),                        // 13: google.retail.common.pb.Contact
	(enums.Distance)(0),                       // 14: google.retail.enums.uom.Distance
	(enums.Count)(0),                          // 15: google.retail.enums.uom.Count
	(enums.Capacity)(0),                       // 16: google.retail.enums.uom.Capacity
	(enums.Area)(0),                           // 17: google.retail.enums.uom.Area
	(enums.Weight)(0),                         // 18: google.retail.enums.uom.Weight
	(enums.GeoSegmentGroup)(0),                // 19: google.retail.enums.geo.GeoSegmentGroup
	(enums.GeoSegment)(0),                     // 20: google.retail.enums.geo.GeoSegment
	(*pb.Address)(nil),                        // 21: google.retail.common.pb.Address
	(enums.Climate)(0),                        // 22: google.retail.enums.climate.Climate
	(*timestamppb.Timestamp)(nil),             // 23: google.protobuf.Timestamp
}
var file_api_location_model_proto_depIdxs = []int32{
	11, // 0: google.retail.location.pb.Site.id:type_name -> google.retail.common.pb.VersionID
	6,  // 1: google.retail.location.pb.Site.location:type_name -> google.retail.location.pb.Site.PhysicalLocation
	12, // 2: google.retail.location.pb.Site.time_zone:type_name -> google.retail.enums.time.TimeZone
	13, // 3: google.retail.location.pb.Site.contacts:type_name -> google.retail.common.pb.Contact
	7,  // 4: google.retail.location.pb.Site.meta:type_name -> google.retail.location.pb.Site.MetaEntry
	14, // 5: google.retail.location.pb.LocationMeasure.distance:type_name -> google.retail.enums.uom.Distance
	15, // 6: google.retail.location.pb.LocationMeasure.count:type_name -> google.retail.enums.uom.Count
	16, // 7: google.retail.location.pb.LocationMeasure.capacity:type_name -> google.retail.enums.uom.Capacity
	17, // 8: google.retail.location.pb.LocationMeasure.area:type_name -> google.retail.enums.uom.Area
	18, // 9: google.retail.location.pb.LocationMeasure.weight:type_name -> google.retail.enums.uom.Weight
	14, // 10: google.retail.location.pb.LocationCoordinate.unit_of_measure:type_name -> google.retail.enums.uom.Distance
	8,  // 11: google.retail.location.pb.LocationCoordinate.location_vertices:type_name -> google.retail.location.pb.LocationCoordinate.LocationVertex
	11, // 12: google.retail.location.pb.Location.id:type_name -> google.retail.common.pb.VersionID
	1,  // 13: google.retail.location.pb.Location.measures:type_name -> google.retail.location.pb.LocationMeasure
	9,  // 14: google.retail.location.pb.Location.merchandise_groups:type_name -> google.retail.location.pb.Location.MerchGroup
	2,  // 15: google.retail.location.pb.Location.location_coordinate:type_name -> google.retail.location.pb.LocationCoordinate
	10, // 16: google.retail.location.pb.Location.meta:type_name -> google.retail.location.pb.Location.MetaEntry
	3,  // 17: google.retail.location.pb.Location.locations:type_name -> google.retail.location.pb.Location
	11, // 18: google.retail.location.pb.GeoSegmentGroup.id:type_name -> google.retail.common.pb.VersionID
	19, // 19: google.retail.location.pb.GeoSegmentGroup.type:type_name -> google.retail.enums.geo.GeoSegmentGroup
	11, // 20: google.retail.location.pb.GeoSegment.id:type_name -> google.retail.common.pb.VersionID
	20, // 21: google.retail.location.pb.GeoSegment.type:type_name -> google.retail.enums.geo.GeoSegment
	0,  // 22: google.retail.location.pb.GeoSegment.sites:type_name -> google.retail.location.pb.Site
	5,  // 23: google.retail.location.pb.GeoSegment.children:type_name -> google.retail.location.pb.GeoSegment
	21, // 24: google.retail.location.pb.Site.PhysicalLocation.address:type_name -> google.retail.common.pb.Address
	22, // 25: google.retail.location.pb.Site.PhysicalLocation.climate:type_name -> google.retail.enums.climate.Climate
	23, // 26: google.retail.location.pb.Location.MerchGroup.effective_date:type_name -> google.protobuf.Timestamp
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_api_location_model_proto_init() }
func file_api_location_model_proto_init() {
	if File_api_location_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_location_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Site); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_location_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationMeasure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_location_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationCoordinate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_location_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_location_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoSegmentGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_location_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoSegment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_location_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Site_PhysicalLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_location_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationCoordinate_LocationVertex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_location_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location_MerchGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_location_model_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*LocationMeasure_Distance)(nil),
		(*LocationMeasure_Count)(nil),
		(*LocationMeasure_Capacity)(nil),
		(*LocationMeasure_Area)(nil),
		(*LocationMeasure_Weight)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_location_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_location_model_proto_goTypes,
		DependencyIndexes: file_api_location_model_proto_depIdxs,
		MessageInfos:      file_api_location_model_proto_msgTypes,
	}.Build()
	File_api_location_model_proto = out.File
	file_api_location_model_proto_rawDesc = nil
	file_api_location_model_proto_goTypes = nil
	file_api_location_model_proto_depIdxs = nil
}
